"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3102],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(96540),i=t(20053);const a={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>p});var r=t(58168),i=t(96540),a=t(20053),l=t(92303),o=t(31682),s=t(86976),u=t(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:n,block:t,defaultValue:l,values:d,groupId:p,className:m}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??g.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),f=(0,o.X)(b,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===l?l:l??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:y}=(0,s.x)(),[P,x]=(0,i.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,u.a_)();if(null!=p){const e=h[p];null!=e&&e!==P&&b.some((n=>n.value===e))&&x(e)}const S=e=>{const n=e.currentTarget,t=T.indexOf(n),r=b[t].value;r!==P&&(O(n),x(r),null!=p&&y(p,String(r)))},w=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}n?.focus()};return i.createElement("div",{className:(0,a.A)("tabs-container",c.tabList)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},m)},b.map((e=>{let{value:n,label:t,attributes:l}=e;return i.createElement("li",(0,r.A)({role:"tab",tabIndex:P===n?0:-1,"aria-selected":P===n,key:n,ref:e=>T.push(e),onKeyDown:w,onFocus:S,onClick:S},l,{className:(0,a.A)("tabs__item",c.tabItem,l?.className,{"tabs__item--active":P===n})}),t??n)}))),n?(0,i.cloneElement)(g.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==P})))))}function p(e){const n=(0,l.A)();return i.createElement(d,(0,r.A)({key:String(n)},e))}},92179:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=t(58168),i=(t(96540),t(15680)),a=t(4865),l=t(19365);const o={title:"Longest Palindromic Substring"},s=void 0,u={unversionedId:"dual-pointers/longest-palindromic-substring",id:"dual-pointers/longest-palindromic-substring",title:"Longest Palindromic Substring",description:"\u63cf\u8ff0",source:"@site/docs/dual-pointers/longest-palindromic-substring.md",sourceDirName:"dual-pointers",slug:"/dual-pointers/longest-palindromic-substring",permalink:"/en/dual-pointers/longest-palindromic-substring",draft:!1,tags:[],version:"current",frontMatter:{title:"Longest Palindromic Substring"},sidebar:"docs",previous:{title:"Valid Palindrome II",permalink:"/en/dual-pointers/valid-palindrome-ii"},next:{title:"Longest Consecutive Sequence",permalink:"/en/dual-pointers/longest-consecutive-sequence"}},c={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5",id:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5",level:4},{value:"Manacher\u2019s Algorithm",id:"manachers-algorithm",level:4}],p={toc:d},m="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(m,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.yg)("p",null,"Given a string ",(0,i.yg)("inlineCode",{parentName:"p"},"S"),", find the longest palindromic substring in ",(0,i.yg)("inlineCode",{parentName:"p"},"S"),". You may assume that the maximum length of ",(0,i.yg)("inlineCode",{parentName:"p"},"S")," is 1000, and there exists one unique longest palindromic substring."),(0,i.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.yg)("p",null,"\u6700\u957f\u56de\u6587\u5b50\u4e32\uff0c\u975e\u5e38\u7ecf\u5178\u7684\u9898\u3002"),(0,i.yg)("p",null,"\u6700\u7b80\u5355\u7684\u601d\u8def\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u4e24\u4e24\u7ec4\u5408\u679a\u4e3e\u6240\u6709\u7684\u5b50\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u4ee5\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e2d\u95f4\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6",(0,i.yg)("inlineCode",{parentName:"p"},"O(n^3)"),"\u3002"),(0,i.yg)("p",null,"\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u8def\u8fdb\u884c\u66b4\u529b\u679a\u4e3e\uff0c\u4ee5\u6bcf\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\uff0c\u53cc\u6307\u9488\u80cc\u5411\u800c\u884c\uff0c\u68c0\u6d4b\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u56de\u6587\u5b50\u4e32\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5947\u6570\u548c\u5076\u6570\uff0c\u679a\u4e3e\u7684\u65f6\u5019\u8981\u8986\u76d6\u8fd92\u79cd\u60c5\u51b5\u3002"),(0,i.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.yg)("h4",{id:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5"},"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5"),(0,i.yg)(a.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,i.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'// Longest Palindromic Substring\n// \u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\n    public String longestPalindrome(String s) {\n        String longest = "";\n        for (int i = 0; i < s.length(); i ++) {\n            // \u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u662f\u5947\u6570\n            String oddPalindrome = getPalindrome(s, i, i);\n            if (longest.length() < oddPalindrome.length()) {\n                longest = oddPalindrome;\n            }\n\n            // \u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u662f\u5076\u6570\n            String evenPalindrome = getPalindrome(s, i, i + 1);\n            if (longest.length() < evenPalindrome.length()) {\n                longest = evenPalindrome;\n            }\n        }\n\n        return longest;\n    }\n\n    private String getPalindrome(String s, int left, int right) {\n        while(left >= 0 && right < s.length()) {\n            if (s.charAt(left) != s.charAt(right)) {\n                break;\n            }\n            left--;\n            right++;\n        }\n        return s.substring(left + 1, right);\n    }\n}\n'))),(0,i.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"// TODO\n")))),(0,i.yg)("h4",{id:"manachers-algorithm"},"Manacher\u2019s Algorithm"),(0,i.yg)(a.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,i.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    public String preProcess(final String s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        StringBuilder ret = new StringBuilder("^");\n        for (int i = 0; i < n; i++) ret.append("#" + s.charAt(i));\n\n        ret.append("#$");\n        return ret.toString();\n    }\n\n    String longestPalindrome(String s) {\n        String T = preProcess(s);\n        final int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int[] P = new int[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int iMirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? Math.min(R - i, P[iMirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T.charAt(i + 1 + P[i]) == T.charAt(i - 1 - P[i]))\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int maxLen = 0;\n        int centerIndex = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > maxLen) {\n                maxLen = P[i];\n                centerIndex = i;\n            }\n        }\n\n        final int start =(centerIndex - 1 - maxLen) / 2;\n        return s.substring(start, start + maxLen);\n    }\n}\n'))),(0,i.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    string preProcess(const string& s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        string ret = "^";\n        for (int i = 0; i < n; i++) ret += "#" + s.substr(i, 1);\n\n        ret += "#$";\n        return ret;\n    }\n\n    string longestPalindrome(string s) {\n        string T = preProcess(s);\n        const int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int P[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int i_mirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? min(R - i, P[i_mirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T[i + 1 + P[i]] == T[i - 1 - P[i]])\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int max_len = 0;\n        int center_index = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > max_len) {\n                max_len = P[i];\n                center_index = i;\n            }\n        }\n\n        return s.substr((center_index - 1 - max_len) / 2, max_len);\n    }\n};\n')))))}g.isMDXComponent=!0}}]);