"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2264],{15680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>y});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function m(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),i=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=i(e.components);return t.createElement(p.Provider,{value:n},e.children)},o="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,u=m(e,["components","mdxType","originalType","parentName"]),o=i(a),c=r,y=o["".concat(p,".").concat(c)]||o[c]||g[c]||s;return a?t.createElement(y,l(l({ref:n},u),{},{components:a})):t.createElement(y,l({ref:n},u))}));function y(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=c;var m={};for(var p in n)hasOwnProperty.call(n,p)&&(m[p]=n[p]);m.originalType=e,m[o]="string"==typeof e?e:r,l[1]=m;for(var i=2;i<s;i++)l[i]=a[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},19365:(e,n,a)=>{a.d(n,{A:()=>l});var t=a(96540),r=a(20053);const s={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:a,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,l),hidden:a},n)}},4865:(e,n,a)=>{a.d(n,{A:()=>g});var t=a(58168),r=a(96540),s=a(20053),l=a(92303),m=a(31682),p=a(86976),i=a(23104);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function o(e){const{lazy:n,block:a,defaultValue:l,values:o,groupId:g,className:c}=e,y=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=o??y.map((e=>{let{props:{value:n,label:a,attributes:t}}=e;return{value:n,label:a,attributes:t}})),h=(0,m.X)(N,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const d=null===l?l:l??y.find((e=>e.props.default))?.props.value??y[0].props.value;if(null!==d&&!N.some((e=>e.value===d)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${d}" but none of its children has the corresponding value. Available values are: ${N.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:b}=(0,p.x)(),[v,w]=(0,r.useState)(d),S=[],{blockElementScrollPositionUntilNextRender:x}=(0,i.a_)();if(null!=g){const e=f[g];null!=e&&e!==v&&N.some((n=>n.value===e))&&w(e)}const O=e=>{const n=e.currentTarget,a=S.indexOf(n),t=N[a].value;t!==v&&(x(n),w(t),null!=g&&b(g,String(t)))},k=e=>{let n=null;switch(e.key){case"ArrowRight":{const a=S.indexOf(e.currentTarget)+1;n=S[a]??S[0];break}case"ArrowLeft":{const a=S.indexOf(e.currentTarget)-1;n=S[a]??S[S.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,s.A)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},c)},N.map((e=>{let{value:n,label:a,attributes:l}=e;return r.createElement("li",(0,t.A)({role:"tab",tabIndex:v===n?0:-1,"aria-selected":v===n,key:n,ref:e=>S.push(e),onKeyDown:k,onFocus:O,onClick:O},l,{className:(0,s.A)("tabs__item",u.tabItem,l?.className,{"tabs__item--active":v===n})}),a??n)}))),n?(0,r.cloneElement)(y.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==v})))))}function g(e){const n=(0,l.A)();return r.createElement(o,(0,t.A)({key:String(n)},e))}},23809:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>y,frontMatter:()=>m,metadata:()=>i,toc:()=>o});var t=a(58168),r=(a(96540),a(15680)),s=a(4865),l=a(19365);const m={title:"3Sum Smaller"},p=void 0,i={unversionedId:"dual-pointers/3sum-smaller",id:"dual-pointers/3sum-smaller",title:"3Sum Smaller",description:"\u63cf\u8ff0",source:"@site/docs/dual-pointers/3sum-smaller.md",sourceDirName:"dual-pointers",slug:"/dual-pointers/3sum-smaller",permalink:"/en/dual-pointers/3sum-smaller",draft:!1,tags:[],version:"current",frontMatter:{title:"3Sum Smaller"},sidebar:"docs",previous:{title:"3Sum Closest",permalink:"/en/dual-pointers/3sum-closest"},next:{title:"4Sum",permalink:"/en/dual-pointers/4sum"}},u={},o=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],g={toc:o},c="wrapper";function y(e){let{components:n,...a}=e;return(0,r.yg)(c,(0,t.A)({},g,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"Given an array of n integers ",(0,r.yg)("inlineCode",{parentName:"p"},"nums")," and an integer target, find the number of index triplets ",(0,r.yg)("inlineCode",{parentName:"p"},"i, j, k")," with ",(0,r.yg)("inlineCode",{parentName:"p"},"0 <= i < j < k < n")," that satisfy the condition ",(0,r.yg)("inlineCode",{parentName:"p"},"nums[i] + nums[j] + nums[k] < target"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Follow up"),": Could you solve it in O(",(0,r.yg)("span",{parentName:"p",className:"math math-inline"},(0,r.yg)("span",{parentName:"span",className:"katex"},(0,r.yg)("span",{parentName:"span",className:"katex-mathml"},(0,r.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.yg)("semantics",{parentName:"math"},(0,r.yg)("mrow",{parentName:"semantics"},(0,r.yg)("msup",{parentName:"mrow"},(0,r.yg)("mi",{parentName:"msup"},"n"),(0,r.yg)("mn",{parentName:"msup"},"2"))),(0,r.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n^2")))),(0,r.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.yg)("span",{parentName:"span",className:"base"},(0,r.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,r.yg)("span",{parentName:"span",className:"mord"},(0,r.yg)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.yg)("span",{parentName:"span",className:"msupsub"},(0,r.yg)("span",{parentName:"span",className:"vlist-t"},(0,r.yg)("span",{parentName:"span",className:"vlist-r"},(0,r.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.yg)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.yg)("span",{parentName:"span",className:"mord mtight"},"2")))))))))))),") runtime?"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 1"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": nums = ","[-2,0,1,3]",", target = 2"),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Output"),": 2"),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Explanation"),": Because there are two triplets which sums are less than 2:"),(0,r.yg)("p",{parentName:"blockquote"},"[-2,0,1]"),(0,r.yg)("p",{parentName:"blockquote"},"[-2,0,3]")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 2"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": nums = [], target = 0"),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Output"),": 0")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 3"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": nums = ","[0]",", target = 0"),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Output"),": 0")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Constraints"),":"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"n == nums.length"),(0,r.yg)("li",{parentName:"ul"},"0 <= n <= 300"),(0,r.yg)("li",{parentName:"ul"},"-100 <= nums","[i]"," <= 100"),(0,r.yg)("li",{parentName:"ul"},"-100 <= target <= 100")),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"\u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\uff0c\u590d\u6742\u5ea6 ",(0,r.yg)("span",{parentName:"p",className:"math math-inline"},(0,r.yg)("span",{parentName:"span",className:"katex"},(0,r.yg)("span",{parentName:"span",className:"katex-mathml"},(0,r.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.yg)("semantics",{parentName:"math"},(0,r.yg)("mrow",{parentName:"semantics"},(0,r.yg)("mi",{parentName:"mrow"},"O"),(0,r.yg)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.yg)("msup",{parentName:"mrow"},(0,r.yg)("mi",{parentName:"msup"},"n"),(0,r.yg)("mn",{parentName:"msup"},"2")),(0,r.yg)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^2)")))),(0,r.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.yg)("span",{parentName:"span",className:"base"},(0,r.yg)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,r.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.yg)("span",{parentName:"span",className:"mopen"},"("),(0,r.yg)("span",{parentName:"span",className:"mord"},(0,r.yg)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.yg)("span",{parentName:"span",className:"msupsub"},(0,r.yg)("span",{parentName:"span",className:"vlist-t"},(0,r.yg)("span",{parentName:"span",className:"vlist-r"},(0,r.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.yg)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.yg)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,r.yg)("span",{parentName:"span",className:"mclose"},")"))))),"\u3002"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(l.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"# 3Sum Smaller\n# \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n# Time Complexity: O(n^2)\n# Space Complexity: O(1)\nclass Solution:\n    def threeSumSmaller(self, nums: List[int], target: int) -> int:\n        nums.sort()\n        count = 0\n        for i in range(len(nums)-2):\n            count += self.twoSumSmaller(nums, i, target - nums[i])\n        return count\n\n    def twoSumSmaller(self, nums: List[int], i: int, target: int) -> int:\n        count = 0\n        left, right = i + 1, len(nums) - 1\n        while left < right:\n            if nums[left] + nums[right] < target:\n                count += right - left\n                left += 1\n            else:\n                right -= 1\n        return count\n"))),(0,r.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// 3Sum Smaller\n// \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n// Time Complexity: O(n^2)\n// Space Complexity: O(1)\nclass Solution {\n    public int threeSumSmaller(int[] nums, int target) {\n        if(nums.length < 3) return 0;\n        Arrays.sort(nums);\n        int count = 0;\n        for (int i = 0; i < nums.length - 2; i++) {\n            count += twoSumSmaller(nums, i, target - nums[i]);\n        }\n        return count;\n    }\n\n    private int twoSumSmaller(int[] nums, int i, int target) {\n        int count = 0;\n        int left = i + 1, right = nums.length - 1;\n        while (left < right) {\n            if (nums[left] + nums[right] < target) {\n                count += right - left;\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n}\n"))),(0,r.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// 3Sum Smaller\n// \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n// Time Complexity: O(n^2)\n// Space Complexity: O(1)\nclass Solution {\npublic:\n    int threeSumSmaller(vector<int>& nums, int target) {\n        if(nums.size() < 3) return 0;\n        sort(nums.begin(), nums.end());\n        int count = 0;\n        for (int i = 0; i < nums.size() - 2; i++) {\n            count += twoSumSmaller(nums, i, target - nums[i]);\n        }\n        return count;\n    }\nprivate:\n    int twoSumSmaller(const vector<int>& nums, int i, int target) {\n        int count = 0;\n        int left = i + 1, right = nums.size() - 1;\n        while (left < right) {\n            if (nums[left] + nums[right] < target) {\n                count += right - left;\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n};\n")))),(0,r.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/array/2sum"},"2Sum")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/dual-pointers/2sum-ii"},"2Sum II")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/dual-pointers/3sum"},"3Sum")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/dual-pointers/4sum"},"4Sum")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/array/4sum-ii"},"4Sum II"))))}y.isMDXComponent=!0}}]);