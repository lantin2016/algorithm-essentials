"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2194],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>h});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(t),d=a,h=c["".concat(u,".").concat(d)]||c[d]||m[d]||o;return t?r.createElement(h,l(l({ref:n},p),{},{components:t})):r.createElement(h,l({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(96540),a=t(20053);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>m});var r=t(58168),a=t(96540),o=t(20053),l=t(92303),i=t(31682),u=t(86976),s=t(23104);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:n,block:t,defaultValue:l,values:c,groupId:m,className:d}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??h.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),b=(0,i.X)(f,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===l?l:l??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:g}=(0,u.x)(),[T,N]=(0,a.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.a_)();if(null!=m){const e=v[m];null!=e&&e!==T&&f.some((n=>n.value===e))&&N(e)}const D=e=>{const n=e.currentTarget,t=O.indexOf(n),r=f[t].value;r!==T&&(w(n),N(r),null!=m&&g(m,String(r)))},x=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}n?.focus()};return a.createElement("div",{className:(0,o.A)("tabs-container",p.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},d)},f.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>O.push(e),onKeyDown:x,onFocus:D,onClick:D},l,{className:(0,o.A)("tabs__item",p.tabItem,l?.className,{"tabs__item--active":T===n})}),t??n)}))),n?(0,a.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function m(e){const n=(0,l.A)();return a.createElement(c,(0,r.A)({key:String(n)},e))}},62799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(58168),a=(t(96540),t(15680)),o=t(4865),l=t(19365);const i={title:"Minimum Depth of Binary Tree"},u=void 0,s={unversionedId:"binary-tree/recursion/minimum-depth-of-binary-tree",id:"binary-tree/recursion/minimum-depth-of-binary-tree",title:"Minimum Depth of Binary Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/recursion/minimum-depth-of-binary-tree.md",sourceDirName:"binary-tree/recursion",slug:"/binary-tree/recursion/minimum-depth-of-binary-tree",permalink:"/en/binary-tree/recursion/minimum-depth-of-binary-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Minimum Depth of Binary Tree"},sidebar:"docs",previous:{title:"\u7b80\u4ecb",permalink:"/en/binary-tree/recursion/"},next:{title:"Maximum Depth of Binary Tree",permalink:"/en/binary-tree/recursion/maximum-depth-of-binary-tree"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u9012\u5f52\u7248",id:"\u9012\u5f52\u7248",level:3},{value:"\u8fed\u4ee3\u7248",id:"\u8fed\u4ee3\u7248",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:c},d="wrapper";function h(e){let{components:n,...t}=e;return(0,a.yg)(d,(0,r.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given a binary tree, find its minimum depth."),(0,a.yg)("p",null,"The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node."),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u65e0"),(0,a.yg)("h3",{id:"\u9012\u5f52\u7248"},"\u9012\u5f52\u7248"),(0,a.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Minimum Depth of Binary Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public int minDepth(TreeNode root) {\n        return minDepth(root, false);\n    }\n    private static int minDepth(TreeNode root, boolean hasbrother) {\n        if (root == null) return hasbrother ? Integer.MAX_VALUE : 0;\n\n        return 1 + Math.min(minDepth(root.left, root.right != null),\n                minDepth(root.right, root.left != null));\n    }\n}\n"))),(0,a.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Depth of Binary Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    int minDepth(const TreeNode *root) {\n        return minDepth(root, false);\n    }\nprivate:\n    static int minDepth(const TreeNode *root, bool hasbrother) {\n        if (!root) return hasbrother ? INT_MAX : 0;\n\n        return 1 + min(minDepth(root->left, root->right != NULL),\n                minDepth(root->right, root->left != NULL));\n    }\n};\n")))),(0,a.yg)("h3",{id:"\u8fed\u4ee3\u7248"},"\u8fed\u4ee3\u7248"),(0,a.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Minimum Depth of Binary Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public int minDepth(TreeNode root) {\n        if (root == null) return 0;\n\n        int result = Integer.MAX_VALUE;\n        Stack<Pair> s = new Stack<>();\n        s.push(new Pair(root, 1));\n\n        while (!s.empty()) {\n            final Pair p = s.pop();\n            TreeNode node = p.node;\n            int depth = p.depth;\n\n            if (node.left == null && node.right == null)\n                result = Math.min(result, depth);\n\n            if (node.left != null && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(new Pair(node.left, depth + 1));\n\n            if (node.right != null && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(new Pair(node.right, depth + 1));\n        }\n\n        return result;\n    }\n\n    static class Pair {\n        TreeNode node;\n        int depth;\n        public Pair(TreeNode node, int depth) {\n            this.node = node;\n            this.depth = depth;\n        }\n    }\n}\n"))),(0,a.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Depth of Binary Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (root == nullptr)\n            return 0;\n\n        int result = INT_MAX;\n\n        stack<pair<TreeNode*, int>> s;\n        s.push(make_pair(root, 1));\n\n        while (!s.empty()) {\n            auto node = s.top().first;\n            auto depth = s.top().second;\n            s.pop();\n\n            if (node->left == nullptr && node->right == nullptr)\n                result = min(result, depth);\n\n            if (node->left && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(make_pair(node->left, depth + 1));\n\n            if (node->right && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(make_pair(node->right, depth + 1));\n        }\n\n        return result;\n    }\n};\n")))),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/en/binary-tree/recursion/maximum-depth-of-binary-tree"},"Maximum Depth of Binary Tree"))))}h.isMDXComponent=!0}}]);