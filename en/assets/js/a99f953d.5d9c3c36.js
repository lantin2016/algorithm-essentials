"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[7851],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(96540),a=t(20053);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>d});var r=t(58168),a=t(96540),i=t(20053),l=t(92303),o=t(31682),s=t(86976),u=t(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:n,block:t,defaultValue:l,values:p,groupId:d,className:m}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??f.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),v=(0,o.X)(g,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===l?l:l??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:h}=(0,s.x)(),[j,N]=(0,a.useState)(b),x=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.a_)();if(null!=d){const e=y[d];null!=e&&e!==j&&g.some((n=>n.value===e))&&N(e)}const O=e=>{const n=e.currentTarget,t=x.indexOf(n),r=g[t].value;r!==j&&(w(n),N(r),null!=d&&h(d,String(r)))},T=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]??x[x.length-1];break}}n?.focus()};return a.createElement("div",{className:(0,i.A)("tabs-container",c.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},m)},g.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:e=>x.push(e),onKeyDown:T,onFocus:O,onClick:O},l,{className:(0,i.A)("tabs__item",c.tabItem,l?.className,{"tabs__item--active":j===n})}),t??n)}))),n?(0,a.cloneElement)(f.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==j})))))}function d(e){const n=(0,l.A)();return a.createElement(p,(0,r.A)({key:String(n)},e))}},52056:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=t(58168),a=(t(96540),t(15680)),i=t(4865),l=t(19365);const o={title:"Number of Islands"},s=void 0,u={unversionedId:"graph/ufs/number-of-islands",id:"graph/ufs/number-of-islands",title:"Number of Islands",description:"\u63cf\u8ff0",source:"@site/docs/graph/ufs/number-of-islands.md",sourceDirName:"graph/ufs",slug:"/graph/ufs/number-of-islands",permalink:"/en/graph/ufs/number-of-islands",draft:!1,tags:[],version:"current",frontMatter:{title:"Number of Islands"},sidebar:"docs",previous:{title:"Number of Provinces",permalink:"/en/graph/ufs/number-of-provinces"},next:{title:"Most Stones Removed with Same Row or Column",permalink:"/en/graph/ufs/most-stones-removed-with-same-row-or-column"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"DFS",id:"dfs",level:4},{value:"\u5e76\u67e5\u96c6",id:"\u5e76\u67e5\u96c6",level:4},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],d={toc:p},m="wrapper";function f(e){let{components:n,...t}=e;return(0,a.yg)(m,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"TODO"),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u8fd9\u91cc\u7528\u66b4\u529b\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\uff0cDFS\u548cBFS\u90fd\u53ef\u4ee5\u3002"),(0,a.yg)("p",null,"\u7a0d\u5fae\u4f18\u5316\u4e00\u70b9\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u5e76\u67e5\u96c6\u3002"),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)("h4",{id:"dfs"},"DFS"),(0,a.yg)(i.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,a.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Number of Islands\n// Time complexity: O(MN)\n// Space complexity: O(MN)\nclass Solution {\n private:\n  void dfs(vector<vector<char> >& grid, int i, int j) {\n    const int M = grid.size(), N = grid[0].size();\n    if (i < 0 || i >= M | j < 0 || j >= N || grid[i][j] == '0') return;\n\n    grid[i][j] = '0';\n    dfs(grid, i - 1, j); // down\n    dfs(grid, i + 1, j); // up\n    dfs(grid, i, j - 1); // left\n    dfs(grid, i, j + 1); // right\n  }\n\n public:\n  int numIslands(vector<vector<char>>& grid) {\n    const int M = grid.size(), N = grid[0].size();\n\n    int num_islands = 0;\n    for (int i = 0; i < M; ++i) {\n      for (int j = 0; j < N; ++j) {\n        if (grid[i][j] == '1') {\n          ++num_islands;\n          dfs(grid, i, j);\n        }\n      }\n    }\n\n    return num_islands;\n  }\n};\n")))),(0,a.yg)("h4",{id:"\u5e76\u67e5\u96c6"},"\u5e76\u67e5\u96c6"),(0,a.yg)(i.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,a.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"class DSU {\n public:\n  DSU(const vector<vector<char>>& grid) {\n    const int M = grid.size(), N = grid[0].size();\n    p = vector<int>(M * N, -1);\n    rank = vector<int>(M * N, 0);\n    for (int i = 0; i < M; i++) {\n      for (int j = 0; j < N; j++) {\n        const int x = i * N + j;\n        if (grid[i][j] == '1') {\n          p[x] = x;\n          rank[x] = 1;\n        }\n      }\n    }\n  }\n\n  int find(int x) {\n    while (p[x] != x) {\n      p[x] = p[p[x]];  // path compression\n      x = p[x];\n    }\n    return x;\n  }\n\n  // return the number of reduced components\n  int merge(int x, int y) {\n    int px = find(x);\n    int py = find(y);\n    if (px == py) return 0;\n\n    if (rank[px] < rank[py]) {\n      p[px] = py;\n    } else if (rank[px] > rank[py]) {\n      p[py] = px;\n    } else {\n      p[px] = py;\n      rank[px] += 1;\n    }\n    return 1;\n  }\n\n private:\n  vector<int> p;\n  vector<int> rank;\n};\n\n// Number of Islands\n// Time complexity: O(MN * log*MN)\n// Space complexity: O(MN)\nclass Solution {\n public:\n  int numIslands(vector<vector<char>>& grid) {\n    const int M = grid.size(), N = grid[0].size();\n    const int dirs[][4] = {\n        {-1, 0}, {1, 0}, {0, -1}, {0, 1}};  // up, down, left, right\n\n    DSU dsu(grid);\n    int num_islands = 0;\n    for (int i = 0; i < M; ++i) {\n      for (int j = 0; j < N; ++j) {\n        if (grid[i][j] == '1') {\n          ++num_islands;\n          for (const auto& dir : dirs) {\n            int new_i = i + dir[0];\n            int new_j = j + dir[1];\n            if (0 <= new_i && new_i < M && 0 <= new_j && new_j < N &&\n                grid[new_i][new_j] == '1') {\n              num_islands -= dsu.merge(i * N + j, new_i * N + new_j);\n            }\n          }\n        }\n      }\n    }\n\n    return num_islands;\n  }\n};\n")))),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/en/graph/ufs/number-of-provinces"},"Number of Provinces"))))}f.isMDXComponent=!0}}]);