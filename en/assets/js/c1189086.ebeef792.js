"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[821],{15680:(n,e,t)=>{t.d(e,{xA:()=>c,yg:()=>f});var a=t(96540);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=a.createContext({}),u=function(n){var e=a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=u(n.components);return a.createElement(s.Provider,{value:e},n.children)},p="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),p=u(t),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(f,i(i({ref:e},c),{},{components:t})):a.createElement(f,i({ref:e},c))}));function f(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[p]="string"==typeof n?n:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19365:(n,e,t)=>{t.d(e,{A:()=>i});var a=t(96540),r=t(20053);const o={tabItem:"tabItem_Ymn6"};function i(n){let{children:e,hidden:t,className:i}=n;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:t},e)}},4865:(n,e,t)=>{t.d(e,{A:()=>d});var a=t(58168),r=t(96540),o=t(20053),i=t(92303),l=t(31682),s=t(86976),u=t(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(n){const{lazy:e,block:t,defaultValue:i,values:p,groupId:d,className:m}=n,f=r.Children.map(n.children,(n=>{if((0,r.isValidElement)(n)&&"value"in n.props)return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??f.map((n=>{let{props:{value:e,label:t,attributes:a}}=n;return{value:e,label:t,attributes:a}})),v=(0,l.X)(b,((n,e)=>n.value===e.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===i?i:i??f.find((n=>n.props.default))?.props.value??f[0].props.value;if(null!==g&&!b.some((n=>n.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${b.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,s.x)(),[h,j]=(0,r.useState)(g),N=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.a_)();if(null!=d){const n=y[d];null!=n&&n!==h&&b.some((e=>e.value===n))&&j(n)}const O=n=>{const e=n.currentTarget,t=N.indexOf(e),a=b[t].value;a!==h&&(C(e),j(a),null!=d&&w(d,String(a)))},I=n=>{let e=null;switch(n.key){case"ArrowRight":{const t=N.indexOf(n.currentTarget)+1;e=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(n.currentTarget)-1;e=N[t]??N[N.length-1];break}}e?.focus()};return r.createElement("div",{className:(0,o.A)("tabs-container",c.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},m)},b.map((n=>{let{value:e,label:t,attributes:i}=n;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:h===e?0:-1,"aria-selected":h===e,key:e,ref:n=>N.push(n),onKeyDown:I,onFocus:O,onClick:O},i,{className:(0,o.A)("tabs__item",c.tabItem,i?.className,{"tabs__item--active":h===e})}),t??e)}))),e?(0,r.cloneElement)(f.filter((n=>n.props.value===h))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==h})))))}function d(n){const e=(0,i.A)();return r.createElement(p,(0,a.A)({key:String(e)},n))}},92009:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var a=t(58168),r=(t(96540),t(15680)),o=t(4865),i=t(19365);const l={title:"N-Queens II"},s=void 0,u={unversionedId:"dfs/n-queens-ii",id:"dfs/n-queens-ii",title:"N-Queens II",description:"\u63cf\u8ff0",source:"@site/docs/dfs/n-queens-ii.md",sourceDirName:"dfs",slug:"/dfs/n-queens-ii",permalink:"/en/dfs/n-queens-ii",draft:!1,tags:[],version:"current",frontMatter:{title:"N-Queens II"},sidebar:"docs",previous:{title:"N-Queens",permalink:"/en/dfs/n-queens"},next:{title:"Restore IP Addresses",permalink:"/en/dfs/restore-ip-addresses"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801 1",id:"\u4ee3\u7801-1",level:3},{value:"\u4ee3\u7801 2",id:"\u4ee3\u7801-2",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],d={toc:p},m="wrapper";function f(n){let{components:e,...t}=n;return(0,r.yg)(m,(0,a.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"Follow up for N-Queens problem."),(0,r.yg)("p",null,"Now, instead outputting board configurations, return the total number of distinct solutions."),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"\u53ea\u9700\u8981\u8f93\u51fa\u89e3\u7684\u4e2a\u6570\uff0c\u4e0d\u9700\u8981\u8f93\u51fa\u6240\u6709\u89e3\uff0c\u4ee3\u7801\u8981\u6bd4\u4e0a\u4e00\u9898\u7b80\u5316\u5f88\u591a\u3002\u8bbe\u4e00\u4e2a\u5168\u5c40\u8ba1\u6570\u5668\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u89e3\u5c31\u589e 1\u3002"),(0,r.yg)("h3",{id:"\u4ee3\u7801-1"},"\u4ee3\u7801 1"),(0,r.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public int totalNQueens(int n) {\n        this.count = 0;\n\n        int[] C = new int[n]; // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this.count;\n    }\n\n    void dfs(int[] C, int row) {\n        final int n = C.length;\n        if (row == n) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this.count;\n            return;\n        }\n\n        for (int j = 0; j < n; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    private static boolean isValid(int[] C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (Math.abs(i - row) == Math.abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n    private int count; // \u89e3\u7684\u4e2a\u6570\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int totalNQueens(int n) {\n        this->count = 0;\n\n        vector<int> C(n, 0);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this->count;\n    }\nprivate:\n    int count; // \u89e3\u7684\u4e2a\u6570\n\n    void dfs(vector<int> &C, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this->count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    bool isValid(const vector<int> &C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (abs(i - row) == abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n};\n")))),(0,r.yg)("h3",{id:"\u4ee3\u7801-2"},"\u4ee3\u7801 2"),(0,r.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6 O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(n)\npublic class Solution {\npublic int totalNQueens(int n) {\nthis.count = 0;\nthis.columns = new boolean[n];\nthis.main_diag = new boolean[2 * n - 1];\nthis.anti_diag = new boolean[2 * n - 1];\n\n        int[] C = new int[n]; // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this.count;\n    }\n\n    void dfs(int[] C, int row) {\n        final int N = C.length;\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this.count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = !columns[j] &&\n                    !main_diag[row - j + N - 1] &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = true;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = false;\n        }\n    }\n\n    private int count; // \u89e3\u7684\u4e2a\u6570\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    private boolean[] columns;   // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    private boolean[] main_diag; // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    private boolean[] anti_diag; // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n\n    public static void main(String[] args) {\n        Solution s = new Solution();\n        s.totalNQueens(1);\n    }\n\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int totalNQueens(int n) {\n        this->count = 0;\n        this->columns = vector<bool>(n, false);\n        this->main_diag = vector<bool>(2 * n - 1, false);\n        this->anti_diag = vector<bool>(2 * n - 1, false);\n\n        vector<int> C(n, 0);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this->count;\n    }\nprivate:\n    int count; // \u89e3\u7684\u4e2a\u6570\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    vector<bool> columns;  // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    vector<bool> main_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    vector<bool> anti_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n\n    void dfs(vector<int> &C, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this->count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = !columns[j] &&\n                    !main_diag[row - j + N - 1] &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = true;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = false;\n        }\n    }\n};\n")))),(0,r.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/dfs/n-queens"},"N-Queens"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"")))}f.isMDXComponent=!0}}]);