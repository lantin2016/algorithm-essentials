"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9478],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>b});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},u=Object.keys(e);for(a=0;a<u.length;a++)t=u[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(a=0;a<u.length;a++)t=u[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),o=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=o(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,u=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=o(t),m=r,b=p["".concat(c,".").concat(m)]||p[m]||d[m]||u;return t?a.createElement(b,l(l({ref:n},s),{},{components:t})):a.createElement(b,l({ref:n},s))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var u=t.length,l=new Array(u);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var o=2;o<u;o++)l[o]=t[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(96540),r=t(20053);const u={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(u.tabItem,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(58168),r=t(96540),u=t(20053),l=t(92303),i=t(31682),c=t(86976),o=t(23104);const s={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:n,block:t,defaultValue:l,values:p,groupId:d,className:m}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=p??b.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),f=(0,i.X)(y,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===l?l:l??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:h}=(0,c.x)(),[q,k]=(0,r.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,o.a_)();if(null!=d){const e=g[d];null!=e&&e!==q&&y.some((n=>n.value===e))&&k(e)}const w=e=>{const n=e.currentTarget,t=O.indexOf(n),a=y[t].value;a!==q&&(E(n),k(a),null!=d&&h(d,String(a)))},T=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,u.A)("tabs-container",s.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.A)("tabs",{"tabs--block":t},m)},y.map((e=>{let{value:n,label:t,attributes:l}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:q===n?0:-1,"aria-selected":q===n,key:n,ref:e=>O.push(e),onKeyDown:T,onFocus:w,onClick:w},l,{className:(0,u.A)("tabs__item",s.tabItem,l?.className,{"tabs__item--active":q===n})}),t??n)}))),n?(0,r.cloneElement)(b.filter((e=>e.props.value===q))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==q})))))}function d(e){const n=(0,l.A)();return r.createElement(p,(0,a.A)({key:String(n)},e))}},43985:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>b,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(58168),r=(t(96540),t(15680)),u=t(4865),l=t(19365);const i={title:"Design Circular Queue"},c=void 0,o={unversionedId:"stack-and-queue/queue/design-circular-queue",id:"stack-and-queue/queue/design-circular-queue",title:"Design Circular Queue",description:"\u63cf\u8ff0",source:"@site/docs/stack-and-queue/queue/design-circular-queue.md",sourceDirName:"stack-and-queue/queue",slug:"/stack-and-queue/queue/design-circular-queue",permalink:"/en/stack-and-queue/queue/design-circular-queue",draft:!1,tags:[],version:"current",frontMatter:{title:"Design Circular Queue"},sidebar:"docs",previous:{title:"Design Bounded Blocking Queue",permalink:"/en/stack-and-queue/queue/design-bounded-blocking-queue"},next:{title:"Design Hit Counter",permalink:"/en/stack-and-queue/queue/design-hit-counter"}},s={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],d={toc:p},m="wrapper";function b(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"TODO"),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"TODO"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)(u.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// Design Circular Queues\nclass MyCircularQueue {\n    private int[] q;\n    private int capacity, head, count;\n\n    public MyCircularQueue(int k) {\n        q = new int[k];\n        capacity = k;\n        head = 0;\n        count = 0;\n    }\n\n    public boolean enQueue(int value) {\n        if (isFull()) return false;\n        q[(head + count) % capacity] = value;\n        count += 1;\n        return true;\n    }\n\n    public boolean deQueue() {\n        if (isEmpty()) return false;\n        head = (head + 1) % capacity;\n        count -= 1;\n        return true;\n    }\n\n    public int Front() {\n        if (isEmpty()) return -1;\n        return q[head];\n    }\n\n    public int Rear() {\n        if (isEmpty()) return -1;\n        int tail = (head + count - 1) % capacity;\n        return q[tail];\n    }\n\n    public boolean isEmpty() {\n        return count == 0;\n    }\n\n    public boolean isFull() {\n        return count == capacity;\n    }\n}\n"))),(0,r.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Design Circular Queues\nclass MyCircularQueue {\npublic:\n    MyCircularQueue(int k) {\n        q = new int[k];\n        capacity = k;\n        head = 0;\n        count = 0;\n    }\n    ~MyCircularQueue() {\n        delete[] q;\n    }\n\n    bool enQueue(int value) {\n        if (isFull()) return false;\n        q[(head + count) % capacity] = value;\n        count += 1;\n        return true;\n    }\n    \n    bool deQueue() {\n        if (isEmpty()) return false;\n        head = (head + 1) % capacity;\n        count -= 1;\n        return true;\n    }\n    \n    int Front() {\n        if (isEmpty()) return -1;\n        return q[head];\n    }\n    \n    int Rear() {\n        if (isEmpty()) return -1;\n        int tail = (head + count - 1) % capacity;\n        return q[tail];\n    }\n    \n    bool isEmpty() {\n        return count == 0;\n    }\n    \n    bool isFull() {\n        return count == capacity;\n    }\n\nprivate:\n    int *q;\n    int capacity, head, count;\n};\n")))))}b.isMDXComponent=!0}}]);