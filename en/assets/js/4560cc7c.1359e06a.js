"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8220],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>d});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(r),y=a,d=c["".concat(u,".").concat(y)]||c[y]||m[y]||l;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=y;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},19365:(e,t,r)=>{r.d(t,{A:()=>o});var n=r(96540),a=r(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,o),hidden:r},t)}},4865:(e,t,r)=>{r.d(t,{A:()=>m});var n=r(58168),a=r(96540),l=r(20053),o=r(92303),i=r(31682),u=r(86976),s=r(23104);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:t,block:r,defaultValue:o,values:c,groupId:m,className:y}=e,d=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??d.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),v=(0,i.X)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===o?o:o??d.find((e=>e.props.default))?.props.value??d[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:h}=(0,u.x)(),[T,N]=(0,a.useState)(b),O=[],{blockElementScrollPositionUntilNextRender:S}=(0,s.a_)();if(null!=m){const e=g[m];null!=e&&e!==T&&f.some((t=>t.value===e))&&N(e)}const w=e=>{const t=e.currentTarget,r=O.indexOf(t),n=f[r].value;n!==T&&(S(t),N(n),null!=m&&h(m,String(n)))},q=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=O.indexOf(e.currentTarget)+1;t=O[r]??O[0];break}case"ArrowLeft":{const r=O.indexOf(e.currentTarget)-1;t=O[r]??O[O.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,l.A)("tabs-container",p.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},y)},f.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>O.push(e),onKeyDown:q,onFocus:w,onClick:w},o,{className:(0,l.A)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":T===t})}),r??t)}))),t?(0,a.cloneElement)(d.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},d.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,o.A)();return a.createElement(c,(0,n.A)({key:String(t)},e))}},98896:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(58168),a=(r(96540),r(15680)),l=r(4865),o=r(19365);const i={title:"Symmetric Tree"},u=void 0,s={unversionedId:"binary-tree/traversal/symmetric-tree",id:"binary-tree/traversal/symmetric-tree",title:"Symmetric Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/traversal/symmetric-tree.md",sourceDirName:"binary-tree/traversal",slug:"/binary-tree/traversal/symmetric-tree",permalink:"/en/binary-tree/traversal/symmetric-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Symmetric Tree"},sidebar:"docs",previous:{title:"Same Tree",permalink:"/en/binary-tree/traversal/same-tree"},next:{title:"Balanced Binary Tree",permalink:"/en/binary-tree/traversal/balanced-binary-tree"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u9012\u5f52\u7248",id:"\u9012\u5f52\u7248",level:3},{value:"\u8fed\u4ee3\u7248",id:"\u8fed\u4ee3\u7248",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:c},y="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(y,(0,n.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center)."),(0,a.yg)("p",null,"For example, this binary tree ",(0,a.yg)("inlineCode",{parentName:"p"},"[1,2,2,3,4,4,3]")," is symmetric:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n")),(0,a.yg)("p",null,"But the following ",(0,a.yg)("inlineCode",{parentName:"p"},"[1,2,2,null,3,null,3]")," is not:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n")),(0,a.yg)("p",null,"Note:\nBonus points if you could solve it both recursively and iteratively."),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u65e0"),(0,a.yg)("h3",{id:"\u9012\u5f52\u7248"},"\u9012\u5f52\u7248"),(0,a.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Symmetric Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public boolean isSymmetric(TreeNode root) {\n        if (root == null) return true;\n        return isSymmetric(root.left, root.right);\n    }\n    private static boolean isSymmetric(TreeNode p, TreeNode q) {\n        if (p == null && q == null) return true;   // \u7ec8\u6b62\u6761\u4ef6\n        if (p == null || q == null) return false;  // \u7ec8\u6b62\u6761\u4ef6\n        return p.val == q.val      // \u4e09\u65b9\u5408\u5e76\n                && isSymmetric(p.left, q.right)\n                && isSymmetric(p.right, q.left);\n    }\n}\n"))),(0,a.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Symmetric Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode *root) {\n        if (root == nullptr) return true;\n        return isSymmetric(root->left, root->right);\n    }\n    bool isSymmetric(TreeNode *p, TreeNode *q) {\n        if (p == nullptr && q == nullptr) return true;   // \u7ec8\u6b62\u6761\u4ef6\n        if (p == nullptr || q == nullptr) return false;  // \u7ec8\u6b62\u6761\u4ef6\n        return p->val == q->val      // \u4e09\u65b9\u5408\u5e76\n                && isSymmetric(p->left, q->right)\n                && isSymmetric(p->right, q->left);\n    }\n};\n")))),(0,a.yg)("h3",{id:"\u8fed\u4ee3\u7248"},"\u8fed\u4ee3\u7248"),(0,a.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Symmetric Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public boolean isSymmetric (TreeNode root) {\n        if (root == null) return true;\n\n        Stack<TreeNode> s = new Stack<>();\n        s.push(root.left);\n        s.push(root.right);\n\n        while (!s.isEmpty()) {\n            TreeNode p = s.pop ();\n            TreeNode q = s.pop ();\n\n            if (p == null && q == null) continue;\n            if (p == null || q == null) return false;\n            if (p.val != q.val) return false;\n\n            s.push(p.left);\n            s.push(q.right);\n\n            s.push(p.right);\n            s.push(q.left);\n        }\n\n        return true;\n    }\n}\n"))),(0,a.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Symmetric Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    bool isSymmetric (TreeNode* root) {\n        if (!root) return true;\n\n        stack<TreeNode*> s;\n        s.push(root->left);\n        s.push(root->right);\n\n        while (!s.empty ()) {\n            auto p = s.top (); s.pop();\n            auto q = s.top (); s.pop();\n\n            if (!p && !q) continue;\n            if (!p || !q) return false;\n            if (p->val != q->val) return false;\n\n            s.push(p->left);\n            s.push(q->right);\n\n            s.push(p->right);\n            s.push(q->left);\n        }\n\n        return true;\n    }\n};\n")))),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/en/binary-tree/traversal/same-tree"},"Same Tree"))))}d.isMDXComponent=!0}}]);