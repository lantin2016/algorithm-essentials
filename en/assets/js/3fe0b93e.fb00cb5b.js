"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4124],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),o=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=o(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=o(t),h=r,d=p["".concat(s,".").concat(h)]||p[h]||m[h]||l;return t?a.createElement(d,i(i({ref:n},u),{},{components:t})):a.createElement(d,i({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=h;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var o=2;o<l;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(58168),r=t(96540),l=t(20053),i=t(92303),c=t(31682),s=t(86976),o=t(23104);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:n,block:t,defaultValue:i,values:p,groupId:m,className:h}=e,d=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??d.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,c.X)(f,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===i?i:i??d.find((e=>e.props.default))?.props.value??d[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:v}=(0,s.x)(),[k,O]=(0,r.useState)(y),N=[],{blockElementScrollPositionUntilNextRender:T}=(0,o.a_)();if(null!=m){const e=g[m];null!=e&&e!==k&&f.some((n=>n.value===e))&&O(e)}const x=e=>{const n=e.currentTarget,t=N.indexOf(n),a=f[t].value;a!==k&&(T(n),O(a),null!=m&&v(m,String(a)))},I=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;n=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(e.currentTarget)-1;n=N[t]??N[N.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,l.A)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},h)},f.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:k===n?0:-1,"aria-selected":k===n,key:n,ref:e=>N.push(e),onKeyDown:I,onFocus:x,onClick:x},i,{className:(0,l.A)("tabs__item",u.tabItem,i?.className,{"tabs__item--active":k===n})}),t??n)}))),n?(0,r.cloneElement)(d.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},d.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==k})))))}function m(e){const n=(0,i.A)();return r.createElement(p,(0,a.A)({key:String(n)},e))}},90554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var a=t(58168),r=(t(96540),t(15680)),l=t(4865),i=t(19365);const c={title:"Basic Calculator II"},s=void 0,o={unversionedId:"stack-and-queue/stack/basic-calculator-ii",id:"stack-and-queue/stack/basic-calculator-ii",title:"Basic Calculator II",description:"\u63cf\u8ff0",source:"@site/docs/stack-and-queue/stack/basic-calculator-ii.md",sourceDirName:"stack-and-queue/stack",slug:"/stack-and-queue/stack/basic-calculator-ii",permalink:"/en/stack-and-queue/stack/basic-calculator-ii",draft:!1,tags:[],version:"current",frontMatter:{title:"Basic Calculator II"},sidebar:"docs",previous:{title:"Basic Calculator",permalink:"/en/stack-and-queue/stack/basic-calculator"},next:{title:"Basic Calculator III",permalink:"/en/stack-and-queue/stack/basic-calculator-iii"}},u={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u6808",id:"\u6808",level:4},{value:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4",id:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4",level:4}],m={toc:p},h="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(h,(0,a.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"TODO"),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"TODO"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)("h4",{id:"\u6808"},"\u6808"),(0,r.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(n)\nclass Solution {\n    public int calculate(String s) {\n        final int N = s.length();\n        Stack<Integer> stk = new Stack<>();\n        int n = 0; // current number\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s.charAt(i); // current char\n            if (Character.isDigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            }\n            if (isOp(ch) || i == N - 1) {\n                if (op == '-') {\n                    stk.push(-n);\n                } else if (op == '+') {\n                    stk.push(n);\n                } else if (op == '*') {\n                    int top = stk.pop();\n                    stk.push(top * n);\n                } else if (op == '/') {\n                    int top = stk.pop();\n                    stk.push(top / n);\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        int result = 0;\n        while (!stk.empty()) {\n            result += stk.pop();\n        }\n        return result;\n    }\n    \n    private boolean isOp(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(n)\nclass Solution {\npublic:\n    int calculate(string s) {\n        const int N = s.length();\n        stack<int> stk;\n        int n = 0; // current number\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s[i]; // current char\n            if (isdigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (is_op(ch) || i == N - 1) {\n                if (op == '-') {\n                    stk.push(-n);\n                } else if (op == '+') {\n                    stk.push(n);\n                } else if (op == '*') {\n                    int top = stk.top(); stk.pop();\n                    stk.push(top * n);\n                } else if (op == '/') {\n                    int top = stk.top(); stk.pop();\n                    stk.push(top / n);\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        int result = 0;\n        while (!stk.empty()) {\n            result += stk.top();\n            stk.pop();\n        }\n        return result;\n    }\nprivate:\n    bool is_op(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n};\n")))),(0,r.yg)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u91cc\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c",(0,r.yg)("inlineCode",{parentName:"p"},"n")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"op"),"\u521d\u59cb\u5316\u4e3a 0 \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"+"),"\uff0c\u76f8\u5f53\u4e8e\u5728\u8868\u8fbe\u5f0f\u524d\u9762\u63d2\u5165\u4e86 ",(0,r.yg)("inlineCode",{parentName:"p"},"0+"),"\uff0c\u5e2e\u52a9\u7b80\u5316\u4ee3\u7801\u3002"),(0,r.yg)("h4",{id:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4"},"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4"),(0,r.yg)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u7a0d\u4f5c\u4f18\u5316\uff0c\u628a\u6808\u6d88\u9664\u6389\u3002"),(0,r.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// Time complexity: O(n)\n// Space complexity: O(1)\nclass Solution {\n    public int calculate(String s) {\n        final int N = s.length();\n        int n = 0; // current number\n        int last = 0; // last number\n        int result = 0;\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s.charAt(i); // current char\n            if (Character.isDigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (isOp(ch) || i == N - 1) {\n                if (op == '+' || op == '-') {\n                    result += last;\n                    last = op == '+' ? n : -n;\n                    stk.push(-n);\n                } else if (op == '*') {\n                    last *= n;\n                } else if (op == '/') {\n                    last /= n;\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        result += last;\n        return result;\n    }\n    \n    private boolean isOp(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(1)\nclass Solution {\npublic:\n    int calculate(string s) {\n        const int N = s.length();\n        int n = 0; // current number\n        int last = 0; // last number\n        int result = 0;\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s[i]; // current char\n            if (isdigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (is_op(ch) || i == N - 1) {\n                if (op == '+' || op == '-') {\n                    result += last;\n                    last = op == '+' ? n : -n;\n                    stk.push(-n);\n                } else if (op == '*') {\n                    last *= n;\n                } else if (op == '/') {\n                    last /= n;\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n\n        result += last;\n        return result;\n    }\nprivate:\n    bool is_op(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n};\n")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/stack-and-queue/stack/basic-calculator"},"Basic Calculator")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/stack-and-queue/stack/basic-calculator-iii"},"Basic Calculator III")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/en/stack-and-queue/stack/build-binary-expression-tree-from-infix-expression"},"Build Binary Expression Tree From Infix Expression"))))}d.isMDXComponent=!0}}]);