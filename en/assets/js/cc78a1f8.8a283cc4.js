"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[1140],{15680:(a,e,n)=>{n.d(e,{xA:()=>g,yg:()=>c});var t=n(96540);function s(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function m(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function r(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?m(Object(n),!0).forEach((function(e){s(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function p(a,e){if(null==a)return{};var n,t,s=function(a,e){if(null==a)return{};var n,t,s={},m=Object.keys(a);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||(s[n]=a[n]);return s}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(s[n]=a[n])}return s}var l=t.createContext({}),i=function(a){var e=t.useContext(l),n=e;return a&&(n="function"==typeof a?a(e):r(r({},e),a)),n},g=function(a){var e=i(a.components);return t.createElement(l.Provider,{value:e},a.children)},o="mdxType",N={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},y=t.forwardRef((function(a,e){var n=a.components,s=a.mdxType,m=a.originalType,l=a.parentName,g=p(a,["components","mdxType","originalType","parentName"]),o=i(n),y=s,c=o["".concat(l,".").concat(y)]||o[y]||N[y]||m;return n?t.createElement(c,r(r({ref:e},g),{},{components:n})):t.createElement(c,r({ref:e},g))}));function c(a,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var m=n.length,r=new Array(m);r[0]=y;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=a,p[o]="string"==typeof a?a:s,r[1]=p;for(var i=2;i<m;i++)r[i]=n[i];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},19365:(a,e,n)=>{n.d(e,{A:()=>r});var t=n(96540),s=n(20053);const m={tabItem:"tabItem_Ymn6"};function r(a){let{children:e,hidden:n,className:r}=a;return t.createElement("div",{role:"tabpanel",className:(0,s.A)(m.tabItem,r),hidden:n},e)}},4865:(a,e,n)=>{n.d(e,{A:()=>N});var t=n(58168),s=n(96540),m=n(20053),r=n(92303),p=n(31682),l=n(86976),i=n(23104);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function o(a){const{lazy:e,block:n,defaultValue:r,values:o,groupId:N,className:y}=a,c=s.Children.map(a.children,(a=>{if((0,s.isValidElement)(a)&&"value"in a.props)return a;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof a.type?a.type:a.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),u=o??c.map((a=>{let{props:{value:e,label:n,attributes:t}}=a;return{value:e,label:n,attributes:t}})),d=(0,p.X)(u,((a,e)=>a.value===e.value));if(d.length>0)throw new Error(`Docusaurus error: Duplicate values "${d.map((a=>a.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===r?r:r??c.find((a=>a.props.default))?.props.value??c[0].props.value;if(null!==h&&!u.some((a=>a.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${u.map((a=>a.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,l.x)(),[b,f]=(0,s.useState)(h),k=[],{blockElementScrollPositionUntilNextRender:x}=(0,i.a_)();if(null!=N){const a=v[N];null!=a&&a!==b&&u.some((e=>e.value===a))&&f(a)}const L=a=>{const e=a.currentTarget,n=k.indexOf(e),t=u[n].value;t!==b&&(x(e),f(t),null!=N&&w(N,String(t)))},T=a=>{let e=null;switch(a.key){case"ArrowRight":{const n=k.indexOf(a.currentTarget)+1;e=k[n]??k[0];break}case"ArrowLeft":{const n=k.indexOf(a.currentTarget)-1;e=k[n]??k[k.length-1];break}}e?.focus()};return s.createElement("div",{className:(0,m.A)("tabs-container",g.tabList)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.A)("tabs",{"tabs--block":n},y)},u.map((a=>{let{value:e,label:n,attributes:r}=a;return s.createElement("li",(0,t.A)({role:"tab",tabIndex:b===e?0:-1,"aria-selected":b===e,key:e,ref:a=>k.push(a),onKeyDown:T,onFocus:L,onClick:L},r,{className:(0,m.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":b===e})}),n??e)}))),e?(0,s.cloneElement)(c.filter((a=>a.props.value===b))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},c.map(((a,e)=>(0,s.cloneElement)(a,{key:e,hidden:a.props.value!==b})))))}function N(a){const e=(0,r.A)();return s.createElement(o,(0,t.A)({key:String(e)},a))}},90771:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>g,contentTitle:()=>l,default:()=>c,frontMatter:()=>p,metadata:()=>i,toc:()=>o});var t=n(58168),s=(n(96540),n(15680)),m=n(4865),r=n(19365);const p={title:"Merge k Sorted Lists"},l=void 0,i={unversionedId:"sorting/merge-sort/merge-k-sorted-lists",id:"sorting/merge-sort/merge-k-sorted-lists",title:"Merge k Sorted Lists",description:"\u63cf\u8ff0",source:"@site/docs/sorting/merge-sort/merge-k-sorted-lists.md",sourceDirName:"sorting/merge-sort",slug:"/sorting/merge-sort/merge-k-sorted-lists",permalink:"/en/sorting/merge-sort/merge-k-sorted-lists",draft:!1,tags:[],version:"current",frontMatter:{title:"Merge k Sorted Lists"},sidebar:"docs",previous:{title:"Merge Two Sorted Lists",permalink:"/en/sorting/merge-sort/merge-two-sorted-lists"},next:{title:"Sort Colors",permalink:"/en/sorting/quick-sort/sort-colors"}},g={},o=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u89e3\u6cd51: \u76f4\u63a5\u8c03\u7528 <code>mergeTwoLists()</code>",id:"\u89e3\u6cd51-\u76f4\u63a5\u8c03\u7528-mergetwolists",level:4},{value:"\u89e3\u6cd52: \u4e24\u4e24\u8c03\u7528 <code>mergeTwoLists()</code>",id:"\u89e3\u6cd52-\u4e24\u4e24\u8c03\u7528-mergetwolists",level:4},{value:"\u89e3\u6cd53: \u5c0f\u6839\u5806",id:"\u89e3\u6cd53-\u5c0f\u6839\u5806",level:4},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],N={toc:o},y="wrapper";function c(a){let{components:e,...n}=a;return(0,s.yg)(y,(0,t.A)({},N,n,{components:e,mdxType:"MDXLayout"}),(0,s.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,s.yg)("p",null,"Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity."),(0,s.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,s.yg)("p",null,"\u53ef\u4ee5\u590d\u7528 ",(0,s.yg)("a",{parentName:"p",href:"/en/sorting/merge-sort/merge-two-sorted-lists"},"Merge Two Sorted Lists")," \u7684\u51fd\u6570"),(0,s.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,s.yg)("h4",{id:"\u89e3\u6cd51-\u76f4\u63a5\u8c03\u7528-mergetwolists"},"\u89e3\u6cd51: \u76f4\u63a5\u8c03\u7528 ",(0,s.yg)("inlineCode",{parentName:"h4"},"mergeTwoLists()")),(0,s.yg)("p",null,"\u5047\u8bbek\u6761\u94fe\u8868\u7684\u603b\u5143\u7d20\u4e2a\u6570\u4e3a",(0,s.yg)("inlineCode",{parentName:"p"},"N"),", \u6bcf\u6761\u94fe\u8868\u7684\u5e73\u5747\u957f\u5ea6\u4e3a ",(0,s.yg)("inlineCode",{parentName:"p"},"N/k"),"\uff0c\u7531\u4e8e\u6bcf\u6b21\u8c03\u7528",(0,s.yg)("inlineCode",{parentName:"p"},"mergeTwoLists()"),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,s.yg)("inlineCode",{parentName:"p"},"O(N/k)"),"\uff0c\u603b\u5171\u8c03\u7528k\u6b21\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.yg)("inlineCode",{parentName:"p"},"O(N)"),"\u3002"),(0,s.yg)(m.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},"// Merge k Sorted Lists\n// \u65f6\u95f4\u590d\u6742\u5ea6O(N)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        if (lists.length == 0) return null;\n\n        ListNode p = lists[0];\n        for (int i = 1; i < lists.length; i++) {\n            p = mergeTwoLists(p, lists[i]);\n        }\n        return p;\n    }\n\n    // Merge Two Sorted Lists\n    ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode head = new ListNode(-1);\n        for (ListNode p = head; l1 != null || l2 != null; p = p.next) {\n            int val1 = l1 == null ? Integer.MAX_VALUE : l1.val;\n            int val2 = l2 == null ? Integer.MAX_VALUE : l2.val;\n            if (val1 <= val2) {\n                p.next = l1;\n                l1 = l1.next;\n            } else {\n                p.next = l2;\n                l2 = l2.next;\n            }\n        }\n        return head.next;\n    }\n}\n"))),(0,s.yg)(r.A,{value:"cpp",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-cpp"},"// Merge k Sorted Lists\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n1+n2+...)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    ListNode *mergeKLists(vector<ListNode *> &lists) {\n        if (lists.empty()) return nullptr;\n\n        ListNode *p = lists[0];\n        for (int i = 1; i < lists.size(); i++) {\n            p = mergeTwoLists(p, lists[i]);\n        }\n        return p;\n    }\n\n    // Merge Two Sorted Lists\n    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\n        ListNode head(-1);\n        for (ListNode* p = &head; l1 != nullptr || l2 != nullptr; p = p->next) {\n            int val1 = l1 == nullptr ? INT_MAX : l1->val;\n            int val2 = l2 == nullptr ? INT_MAX : l2->val;\n            if (val1 <= val2) {\n                p->next = l1;\n                l1 = l1->next;\n            } else {\n                p->next = l2;\n                l2 = l2->next;\n            }\n        }\n        return head.next;\n    }\n};\n")))),(0,s.yg)("h4",{id:"\u89e3\u6cd52-\u4e24\u4e24\u8c03\u7528-mergetwolists"},"\u89e3\u6cd52: \u4e24\u4e24\u8c03\u7528 ",(0,s.yg)("inlineCode",{parentName:"h4"},"mergeTwoLists()")),(0,s.yg)("p",null,"\u5047\u8bbek\u6761\u94fe\u8868\u7684\u603b\u5143\u7d20\u4e2a\u6570\u4e3a",(0,s.yg)("inlineCode",{parentName:"p"},"N"),", \u6bcf\u6761\u94fe\u8868\u7684\u5e73\u5747\u957f\u5ea6\u4e3a ",(0,s.yg)("inlineCode",{parentName:"p"},"N/k"),"\uff0c"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"\u7b2c1\u6b21\u5faa\u73af\u4e2d\uff0ck\u4e2a\u94fe\u8868\u4e2a\u6570\u51cf\u534a\uff0c\u5171\u8c03\u7528\u4e86 ",(0,s.yg)("inlineCode",{parentName:"li"},"k/2")," \u6b21",(0,s.yg)("inlineCode",{parentName:"li"},"mergeTwoLists()"),"\uff0c\u6bcf\u6b21",(0,s.yg)("inlineCode",{parentName:"li"},"mergeTwoLists()"),"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,s.yg)("inlineCode",{parentName:"li"},"N/k"),"\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.yg)("span",{parentName:"li",className:"math math-inline"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mn",{parentName:"mrow"},"2"),(0,s.yg)("mo",{parentName:"mrow"},"\u2217"),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mn",{parentName:"mrow"},"2")),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k/2 * N/k=N/2")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/2"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/"),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/2"))))),"\uff1b"),(0,s.yg)("li",{parentName:"ul"},"\u7b2c2\u6b21\u5faa\u73af\u4e2d\uff0c\u94fe\u8868\u4e2a\u6570\u7ee7\u7eed\u51cf\u534a\uff0c\u53d8\u4e3a ",(0,s.yg)("inlineCode",{parentName:"li"},"k/4"),"\uff0c\u5171\u8c03\u7528\u4e86 ",(0,s.yg)("inlineCode",{parentName:"li"},"k/4")," \u6b21",(0,s.yg)("inlineCode",{parentName:"li"},"mergeTwoLists()"),"\uff0c\u6bcf\u6b21",(0,s.yg)("inlineCode",{parentName:"li"},"mergeTwoLists()"),"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,s.yg)("inlineCode",{parentName:"li"},"2N/k"),"\uff0c\u56e0\u4e3a\u4e0a\u4e00\u8f6e\u628a\u6bcf\u6761\u5355\u94fe\u8868\u7684\u957f\u5ea6\u8fb9\u957f\u4e86\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.yg)("span",{parentName:"li",className:"math math-inline"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mn",{parentName:"mrow"},"4"),(0,s.yg)("mo",{parentName:"mrow"},"\xd7"),(0,s.yg)("mn",{parentName:"mrow"},"2"),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mn",{parentName:"mrow"},"2")),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k/4 \\times 2N/k=N/2")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/4"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},"2"),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/"),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/2"))))),"\uff1b"),(0,s.yg)("li",{parentName:"ul"},"\u4f9d\u6b64\u7c7b\u63a8\uff0c\u7b2c",(0,s.yg)("span",{parentName:"li",className:"math math-inline"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("mi",{parentName:"mrow"},"log"),(0,s.yg)("mo",{parentName:"mrow"},"\u2061"),(0,s.yg)("mi",{parentName:"mrow"},"k")),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\log{k}")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,s.yg)("span",{parentName:"span",className:"mop"},"lo",(0,s.yg)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))),"\u6b21\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.yg)("span",{parentName:"li",className:"math math-inline"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("msup",{parentName:"mrow"},(0,s.yg)("mn",{parentName:"msup"},"2"),(0,s.yg)("mrow",{parentName:"msup"},(0,s.yg)("mi",{parentName:"mrow"},"log"),(0,s.yg)("mo",{parentName:"mrow"},"\u2061"),(0,s.yg)("mi",{parentName:"mrow"},"k"))),(0,s.yg)("mo",{parentName:"mrow"},"\xd7"),(0,s.yg)("msup",{parentName:"mrow"},(0,s.yg)("mn",{parentName:"msup"},"2"),(0,s.yg)("mrow",{parentName:"msup"},(0,s.yg)("mi",{parentName:"mrow"},"log"),(0,s.yg)("mo",{parentName:"mrow"},"\u2061"),(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mo",{parentName:"mrow"},"\u2212"),(0,s.yg)("mn",{parentName:"mrow"},"1"))),(0,s.yg)("mo",{parentName:"mrow"},"\xd7"),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mo",{parentName:"mrow"},"="),(0,s.yg)("mi",{parentName:"mrow"},"N"),(0,s.yg)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.yg)("mn",{parentName:"mrow"},"2")),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k/{2^{\\log{k}}} \\times 2^{\\log{k}-1} \\times N/k=N/2")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1.0991em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/"),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord"},"2"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.8491em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mop mtight"},(0,s.yg)("span",{parentName:"span",className:"mtight"},"l"),(0,s.yg)("span",{parentName:"span",className:"mtight"},"o"),(0,s.yg)("span",{parentName:"span",className:"mtight",style:{marginRight:"0.01389em"}},"g")),(0,s.yg)("span",{parentName:"span",className:"mspace mtight",style:{marginRight:"0.1952em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"))))))))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.9324em",verticalAlign:"-0.0833em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord"},"2"),(0,s.yg)("span",{parentName:"span",className:"msupsub"},(0,s.yg)("span",{parentName:"span",className:"vlist-t"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.8491em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mop mtight"},(0,s.yg)("span",{parentName:"span",className:"mtight"},"l"),(0,s.yg)("span",{parentName:"span",className:"mtight"},"o"),(0,s.yg)("span",{parentName:"span",className:"mtight",style:{marginRight:"0.01389em"}},"g")),(0,s.yg)("span",{parentName:"span",className:"mspace mtight",style:{marginRight:"0.1952em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")),(0,s.yg)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/"),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.yg)("span",{parentName:"span",className:"mrel"},"="),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.yg)("span",{parentName:"span",className:"mord"},"/2"))))))),(0,s.yg)("p",null,"\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,s.yg)("span",{parentName:"p",className:"math math-inline"},(0,s.yg)("span",{parentName:"span",className:"katex"},(0,s.yg)("span",{parentName:"span",className:"katex-mathml"},(0,s.yg)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.yg)("semantics",{parentName:"math"},(0,s.yg)("mrow",{parentName:"semantics"},(0,s.yg)("mi",{parentName:"mrow"},"log"),(0,s.yg)("mo",{parentName:"mrow"},"\u2061"),(0,s.yg)("mi",{parentName:"mrow"},"k"),(0,s.yg)("mo",{parentName:"mrow"},"\xd7"),(0,s.yg)("mfrac",{parentName:"mrow"},(0,s.yg)("mi",{parentName:"mfrac"},"N"),(0,s.yg)("mn",{parentName:"mfrac"},"2"))),(0,s.yg)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\log{k} \\times \\frac{N}{2}")))),(0,s.yg)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,s.yg)("span",{parentName:"span",className:"mop"},"lo",(0,s.yg)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.yg)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.yg)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.yg)("span",{parentName:"span",className:"base"},(0,s.yg)("span",{parentName:"span",className:"strut",style:{height:"1.2173em",verticalAlign:"-0.345em"}}),(0,s.yg)("span",{parentName:"span",className:"mord"},(0,s.yg)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.yg)("span",{parentName:"span",className:"mfrac"},(0,s.yg)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.8723em"}},(0,s.yg)("span",{parentName:"span",style:{top:"-2.655em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,s.yg)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.yg)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.yg)("span",{parentName:"span",style:{top:"-3.394em"}},(0,s.yg)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.yg)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mtight"},(0,s.yg)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N"))))),(0,s.yg)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.yg)("span",{parentName:"span",className:"vlist-r"},(0,s.yg)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,s.yg)("span",{parentName:"span"}))))),(0,s.yg)("span",{parentName:"span",className:"mclose nulldelimiter"})))))),"\u3002"),(0,s.yg)(m.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,s.yg)(r.A,{value:"cpp",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-cpp"},"// Merge k Sorted Lists\n// \u65f6\u95f4\u590d\u6742\u5ea6O(logk*N/2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    ListNode *mergeKLists(vector<ListNode *> &lists) {\n        if (lists.empty()) return nullptr;\n\n        while(lists.size() > 1){\n            lists.push_back(mergeTwoLists(lists[0], lists[1]));\n            lists.erase(lists.begin());\n            lists.erase(lists.begin());\n        }\n        return lists.front();\n    }\n\n    // Merge Two Sorted Lists\n    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\n        ListNode head(-1);\n        for (ListNode* p = &head; l1 != nullptr || l2 != nullptr; p = p->next) {\n            int val1 = l1 == nullptr ? INT_MAX : l1->val;\n            int val2 = l2 == nullptr ? INT_MAX : l2->val;\n            if (val1 <= val2) {\n                p->next = l1;\n                l1 = l1->next;\n            } else {\n                p->next = l2;\n                l2 = l2->next;\n            }\n        }\n        return head.next;\n    }\n};\n")))),(0,s.yg)("h4",{id:"\u89e3\u6cd53-\u5c0f\u6839\u5806"},"\u89e3\u6cd53: \u5c0f\u6839\u5806"),(0,s.yg)("p",null,"\u53ef\u4ee5\u4e00\u6b21\u6027\u5408\u5e76k\u6761\u94fe\u8868\uff0c\u6bcf\u6b21\u4ecek\u4e2a\u5143\u7d20\u4e2d\u9009\u4e00\u4e2a\u6700\u5c0f\u7684\u51fa\u6765\uff0c\u8fd9\u53ef\u4ee5\u7528\u5806\u6765\u505a\uff0c\u6bcf\u4e2a\u5143\u7d20\u5165\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,s.yg)("inlineCode",{parentName:"p"},"O(logk)"),"\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,s.yg)("inlineCode",{parentName:"p"},"O(Nlogk)"),"\u3002"),(0,s.yg)(m.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.yg)(r.A,{value:"java",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,s.yg)(r.A,{value:"cpp",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-cpp"},"// Merge k Sorted Lists\n// \u65f6\u95f4\u590d\u6742\u5ea6O(Nlogk)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logk)\n\nstruct compare {\n    bool operator()(const ListNode* l, const ListNode* r) {\n        return l->val > r->val;\n    }\n};\n\nclass Solution {\npublic:\n\n    ListNode *mergeKLists(vector<ListNode *> &lists) {\n        if(lists.empty()) return nullptr;\n\n        priority_queue<ListNode* , vector<ListNode *>, compare> pq;\n\n        for (auto i : lists) {\n            if(i) pq.push(i);\n        }\n\n        ListNode * dummy = new ListNode(-1);\n        ListNode * tail =  dummy;\n        while (!pq.empty()) {\n            tail->next = pq.top();\n            tail = tail->next;\n            pq.pop();\n            if(tail->next) {\n                pq.push(tail->next);\n            }\n        }\n\n        return dummy->next;\n    }\n};\n")))),(0,s.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"/en/sorting/merge-sort/merge-two-sorted-arrays"},"Merge Two Sorted Arrays")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"/en/sorting/merge-sort/merge-two-sorted-lists"},"Merge Two Sorted Lists"))))}c.isMDXComponent=!0}}]);