"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9647],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),g=a,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>i});var r=t(96540),a=t(20053);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,i),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>p});var r=t(58168),a=t(96540),o=t(20053),i=t(92303),l=t(31682),s=t(86976),u=t(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:n,block:t,defaultValue:i,values:d,groupId:p,className:g}=e,m=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??m.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),b=(0,l.X)(f,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===i?i:i??m.find((e=>e.props.default))?.props.value??m[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:v}=(0,s.x)(),[w,O]=(0,a.useState)(h),j=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.a_)();if(null!=p){const e=y[p];null!=e&&e!==w&&f.some((n=>n.value===e))&&O(e)}const L=e=>{const n=e.currentTarget,t=j.indexOf(n),r=f[t].value;r!==w&&(C(n),O(r),null!=p&&v(p,String(r)))},S=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=j.indexOf(e.currentTarget)+1;n=j[t]??j[0];break}case"ArrowLeft":{const t=j.indexOf(e.currentTarget)-1;n=j[t]??j[j.length-1];break}}n?.focus()};return a.createElement("div",{className:(0,o.A)("tabs-container",c.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},g)},f.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>j.push(e),onKeyDown:S,onFocus:L,onClick:L},i,{className:(0,o.A)("tabs__item",c.tabItem,i?.className,{"tabs__item--active":w===n})}),t??n)}))),n?(0,a.cloneElement)(m.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},m.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function p(e){const n=(0,i.A)();return a.createElement(d,(0,r.A)({key:String(n)},e))}},69417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=t(58168),a=(t(96540),t(15680)),o=t(4865),i=t(19365);const l={title:"Substring with Concatenation of All Words"},s=void 0,u={unversionedId:"simulation/substring-with-concatenation-of-all-words",id:"simulation/substring-with-concatenation-of-all-words",title:"Substring with Concatenation of All Words",description:"\u63cf\u8ff0",source:"@site/docs/simulation/substring-with-concatenation-of-all-words.md",sourceDirName:"simulation",slug:"/simulation/substring-with-concatenation-of-all-words",permalink:"/simulation/substring-with-concatenation-of-all-words",draft:!1,tags:[],version:"current",frontMatter:{title:"Substring with Concatenation of All Words"},sidebar:"docs",previous:{title:"Multiply Strings",permalink:"/simulation/multiply-strings"},next:{title:"Pascal's Triangle",permalink:"/simulation/pascal-s-triangle"}},c={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:d},g="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"You are given a string, ",(0,a.yg)("inlineCode",{parentName:"p"},"S"),", and a list of words, ",(0,a.yg)("inlineCode",{parentName:"p"},"L"),", that are all of the same length. Find all starting indices of substring(s) in ",(0,a.yg)("inlineCode",{parentName:"p"},"S")," that is a concatenation of each word in ",(0,a.yg)("inlineCode",{parentName:"p"},"L")," exactly once and without any intervening characters."),(0,a.yg)("p",null,"For example, given:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'S: "barfoothefoobarman"\nL: ["foo", "bar"]\n')),(0,a.yg)("p",null,"You should return the indices: ",(0,a.yg)("inlineCode",{parentName:"p"},"[0,9]"),".(order does not matter)."),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u65e0"),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Substring with Concatenation of All Words\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(m)\npublic class Solution {\n    public List<Integer> findSubstring(String s, String[] words) {\n        final int wordLength = words[0].length();\n        final int catLength = wordLength * words.length;\n        List<Integer> result = new ArrayList<>();\n\n        if (s.length() < catLength) return result;\n\n        HashMap<String, Integer> wordCount = new HashMap<>();\n\n        for (String word : words)\n            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n\n        for (int i = 0; i <= s.length() - catLength; ++i) {\n            HashMap<String, Integer> unused = new HashMap<>(wordCount);\n\n            for (int j = i; j < i + catLength; j += wordLength) {\n                final String key = s.substring(j, j + wordLength);\n                final int pos = unused.getOrDefault(key, -1);\n\n                if (pos == -1 || pos == 0) break;\n\n                unused.put(key, pos - 1);\n                if (pos - 1 == 0) unused.remove(key);\n            }\n\n            if (unused.size() == 0) result.add(i);\n        }\n\n        return result;\n    }\n}\n"))),(0,a.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// LeetCode, Substring with Concatenation of All Words\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(m)\nclass Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& dict) {\n        size_t wordLength = dict.front().length();\n        size_t catLength = wordLength * dict.size();\n        vector<int> result;\n\n        if (s.length() < catLength) return result;\n\n        unordered_map<string, int> wordCount;\n\n        for (auto const& word : dict) ++wordCount[word];\n\n        for (auto i = begin(s); i <= prev(end(s), catLength); ++i) {\n            unordered_map<string, int> unused(wordCount);\n\n            for (auto j = i; j != next(i, catLength); j += wordLength) {\n                auto pos = unused.find(string(j, next(j, wordLength)));\n\n                if (pos == unused.end() || pos->second == 0) break;\n\n                if (--pos->second == 0) unused.erase(pos);\n            }\n\n            if (unused.size() == 0) result.push_back(distance(begin(s), i));\n        }\n\n        return result;\n    }\n};\n")))))}m.isMDXComponent=!0}}]);