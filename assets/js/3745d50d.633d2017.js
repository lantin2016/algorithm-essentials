"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5993],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>v});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),s=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(d.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(t),y=i,v=u["".concat(d,".").concat(y)]||u[y]||c[y]||l;return t?r.createElement(v,o(o({ref:n},p),{},{components:t})):r.createElement(v,o({ref:n},p))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,o=new Array(l);o[0]=y;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a[u]="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},7936:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var r=t(58168),i=(t(96540),t(15680));const l={title:"Odd Even Linked List"},o=void 0,a={unversionedId:"linked-list/odd-even-linked-list",id:"linked-list/odd-even-linked-list",title:"Odd Even Linked List",description:"\u63cf\u8ff0",source:"@site/docs/linked-list/odd-even-linked-list.md",sourceDirName:"linked-list",slug:"/linked-list/odd-even-linked-list",permalink:"/linked-list/odd-even-linked-list",draft:!1,tags:[],version:"current",frontMatter:{title:"Odd Even Linked List"},sidebar:"docs",previous:{title:"Reverse Linked List II",permalink:"/linked-list/reverse-linked-list-ii"},next:{title:"Add Two Numbers",permalink:"/linked-list/add-two-numbers"}},d={},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:s},u="wrapper";function c(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.yg)("p",null,"Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes."),(0,i.yg)("p",null,"You should try to do it in place. The program should run in ",(0,i.yg)("inlineCode",{parentName:"p"},"O(1)")," space complexity and ",(0,i.yg)("inlineCode",{parentName:"p"},"O(n)")," time complexity."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Example"),":"),(0,i.yg)("p",null,"Given ",(0,i.yg)("inlineCode",{parentName:"p"},"1->2->3->4->5->NULL"),","),(0,i.yg)("p",null,"return ",(0,i.yg)("inlineCode",{parentName:"p"},"1->3->5->2->4->NULL"),"."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Note"),":"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"The relative order inside both the even and odd groups should remain as it was in the input."),(0,i.yg)("li",{parentName:"ol"},"The first node is considered odd, the second node even and so on ...")),(0,i.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.yg)("p",null,"\u4e00\u6b21\u904d\u5386\uff0c\u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\u4ea4\u53c9\u8d4b\u503c\uff0c\u6700\u540e\u628a\u5947\u6570\u94fe\u8868\u7684\u5c3e\u5df4\u8fde\u63a5\u5230\u5076\u6570\u94fe\u8868\u7684\u5934\u90e8\u3002"),(0,i.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},"// Odd Even Linked List\n// Time Complexity: O(n), Space Complexity: O(1)\npublic class Solution {\n    public ListNode oddEvenList(ListNode head) {\n        if (head == null) return null;\n        // head and odd are the head pointer and tail pointer of odd list\n        // evenHead and even are the head pointer and tail pointer of even list\n        ListNode odd = head, even = head.next, evenHead = even;\n        while (even != null && even.next != null) {\n            odd.next = even.next;\n            odd = odd.next;\n            even.next = odd.next;\n            even = even.next;\n        }\n        odd.next = evenHead;\n        return head;\n    }\n}\n")))}c.isMDXComponent=!0}}]);