"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3501],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),d=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),g=a,f=c["".concat(o,".").concat(g)]||c[g]||p[g]||s;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<s;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(96540),a=n(20053);const s={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,i),hidden:n},t)}},4865:(e,t,n)=>{n.d(t,{A:()=>p});var r=n(58168),a=n(96540),s=n(20053),i=n(92303),l=n(31682),o=n(86976),d=n(23104);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:t,block:n,defaultValue:i,values:c,groupId:p,className:g}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),m=c??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),h=(0,l.X)(m,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==v&&!m.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${m.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,o.x)(),[w,S]=(0,a.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:_}=(0,d.a_)();if(null!=p){const e=y[p];null!=e&&e!==w&&m.some((t=>t.value===e))&&S(e)}const N=e=>{const t=e.currentTarget,n=O.indexOf(t),r=m[n].value;r!==w&&(_(t),S(r),null!=p&&b(p,String(r)))},T=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=O.indexOf(e.currentTarget)+1;t=O[n]??O[0];break}case"ArrowLeft":{const n=O.indexOf(e.currentTarget)-1;t=O[n]??O[O.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,s.A)("tabs-container",u.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},g)},m.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:T,onFocus:N,onClick:N},i,{className:(0,s.A)("tabs__item",u.tabItem,i?.className,{"tabs__item--active":w===t})}),n??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function p(e){const t=(0,i.A)();return a.createElement(c,(0,r.A)({key:String(t)},e))}},41840:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=n(58168),a=(n(96540),n(15680)),s=n(4865),i=n(19365);const l={title:"Word Ladder"},o=void 0,d={unversionedId:"bfs/graph/word-ladder",id:"bfs/graph/word-ladder",title:"Word Ladder",description:"\u63cf\u8ff0",source:"@site/docs/bfs/graph/word-ladder.md",sourceDirName:"bfs/graph",slug:"/bfs/graph/word-ladder",permalink:"/bfs/graph/word-ladder",draft:!1,tags:[],version:"current",frontMatter:{title:"Word Ladder"},sidebar:"docs",previous:{title:"Binary Tree Zigzag Level Order Traversal",permalink:"/bfs/tree/binary-tree-zigzag-level-order-traversal"},next:{title:"Word Ladder II",permalink:"/bfs/graph/word-ladder-ii"}},u={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u5355\u961f\u5217",id:"\u5355\u961f\u5217",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],p={toc:c},g="wrapper";function f(e){let{components:t,...n}=e;return(0,a.yg)(g,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given two words (start and end), and a dictionary, find the length of shortest transformation sequence from start to end, such that:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Only one letter can be changed at a time"),(0,a.yg)("li",{parentName:"ul"},"Each intermediate word must exist in the dictionary")),(0,a.yg)("p",null,"For example, Given:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'start = "hit"\nend = "cog"\ndict = ["hot","dot","dog","lot","log"]\n')),(0,a.yg)("p",null,"As one shortest transformation is ",(0,a.yg)("inlineCode",{parentName:"p"},'"hit" -> "hot" -> "dot" -> "dog" -> "cog"'),", return its length ",(0,a.yg)("inlineCode",{parentName:"p"},"5"),"."),(0,a.yg)("p",null,"Note:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Return 0 if there is no such transformation sequence."),(0,a.yg)("li",{parentName:"ul"},"All words have the same length."),(0,a.yg)("li",{parentName:"ul"},"All words contain only lowercase alphabetic characters.")),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u6c42\u6700\u77ed\u8def\u5f84\uff0c\u7528\u5e7f\u641c\u3002"),(0,a.yg)("h3",{id:"\u5355\u961f\u5217"},"\u5355\u961f\u5217"),(0,a.yg)(s.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Word Ladder\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        Queue<State> q = new LinkedList<>();\n        Set<State> visited = new HashSet<>();\n        Set<String> wordDict = new HashSet<>(wordList);\n\n        final Function<State, Boolean> stateIsValid = (State s) ->\n                wordDict.contains(s.word);\n        final Function<State, Boolean> stateIsTarget = (State s) ->\n                s.word.equals(endWord);\n\n        final Function<State, List<State> > stateExtend = (State s) -> {\n            List<State> result = new ArrayList<>();\n\n            char[] array = s.word.toCharArray();\n            for (int i = 0; i < array.length; ++i) {\n                final char old = array[i];\n                for (char c = 'a'; c <= 'z'; c++) {\n                    // \u9632\u6b62\u540c\u5b57\u6bcd\u66ff\u6362\n                    if (c == array[i]) continue;\n\n                    array[i] = c;\n                    State newState = new State(new String(array), s.level+1);\n\n                    if (stateIsValid.apply(newState)) {\n                        result.add(newState);\n                    }\n                    array[i] = old; // \u6062\u590d\u8be5\u5355\u8bcd\n                }\n            }\n\n            return result;\n        };\n\n        State startState = new State(beginWord, 0);\n        visited.add(startState);\n        q.offer(startState);\n\n        while (!q.isEmpty()) {\n            State state = q.poll();\n\n            if (stateIsTarget.apply(state)) {\n                return state.level + 1;\n            }\n\n\n            List<State> newStates = stateExtend.apply(state);\n            for (State newState : newStates) {\n                visited.add(newState);\n                q.offer(newState);\n            }\n        }\n        return 0;\n    }\n\n    static class State {\n        String word;\n        int level;\n\n        public State(String word, int level) {\n            this.word = word;\n            this.level = level;\n        }\n\n        @Override\n        public int hashCode() {\n            return word.hashCode();\n        }\n\n        @Override\n        public boolean equals(Object other) {\n            if (this == other) return true;\n            if (this.hashCode() != other.hashCode()) return false;\n            if (!(other instanceof State)) return false;\n\n            return this.word.equals(((State) other).word);\n        }\n    }\n}\n"))),(0,a.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Word Ladder\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n public:\n  int ladderLength(const string &start, const string &end,\n                   const vector<string> &wordList) {\n    queue<pair<string, int>> q;\n    unordered_set<string> visited;\n    unordered_set<string> dict(wordList.begin(), wordList.end());\n\n    auto state_is_valid = [&](const string &s) {\n      return dict.find(s) != dict.end();\n    };\n    auto state_is_target = [&](const string &s) { return s == end; };\n    auto state_extend = [&](const string &s) {\n      vector<string> result;\n\n      for (size_t i = 0; i < s.size(); ++i) {\n        string new_state(s);\n        for (char c = 'a'; c <= 'z'; c++) {\n          if (c == new_state[i]) continue;\n\n          swap(c, new_state[i]);\n          if (state_is_valid(new_state) &&\n              visited.find(new_state) == visited.end()) {\n            result.push_back(new_state);\n          }\n          swap(c, new_state[i]);  // restore\n        }\n      }\n\n      return result;\n    };\n\n    visited.insert(start); // mark as visited before enqueue\n    q.push(pair<string, int>{start, 0});\n    while (!q.empty()) {\n      // Do NOT use reference here, because pop() will delete\n      // the element, then the reference will become dangled\n      const pair<string, int> state = q.front();\n      q.pop();\n\n      if (state_is_target(state.first)) {\n        return state.second + 1;\n      }\n\n      const vector<string> &new_states = state_extend(state.first);\n      for (const string &new_state : new_states) {\n        if (visited.find(new_state) == visited.end()) {\n          visited.insert(new_state);  // mark as visited before enqueue\n          q.push(pair<string, int>{new_state, state.second + 1});\n        }\n      }\n    }\n    return 0;\n  }\n};\n")))),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/bfs/graph/word-ladder-ii"},"Word Ladder II"))))}f.isMDXComponent=!0}}]);