"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[743],{15680:(e,r,n)=>{n.d(r,{xA:()=>p,yg:()=>d});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),c=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(u.Provider,{value:r},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(n),g=a,d=s["".concat(u,".").concat(g)]||s[g]||m[g]||i;return n?t.createElement(d,o(o({ref:r},p),{},{components:n})):t.createElement(d,o({ref:r},p))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},15192:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(58168),a=(n(96540),n(15680));const i={title:"Fraction to Recurring Decimal"},o=void 0,l={unversionedId:"number-theory/fraction-to-recurring-decimal",id:"number-theory/fraction-to-recurring-decimal",title:"Fraction to Recurring Decimal",description:"\u63cf\u8ff0",source:"@site/docs/number-theory/fraction-to-recurring-decimal.md",sourceDirName:"number-theory",slug:"/number-theory/fraction-to-recurring-decimal",permalink:"/number-theory/fraction-to-recurring-decimal",draft:!1,tags:[],version:"current",frontMatter:{title:"Fraction to Recurring Decimal"},sidebar:"docs",previous:{title:"Super Ugly Number",permalink:"/number-theory/super-ugly-number"},next:{title:"Factorial Trailing Zeroes",permalink:"/number-theory/factorial-trailing-zeroes"}},u={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:c},s="wrapper";function m(e){let{components:r,...n}=e;return(0,a.yg)(s,(0,t.A)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given two integers representing the numerator and denominator of a fraction, return the fraction in string format."),(0,a.yg)("p",null,"If the fractional part is repeating, enclose the repeating part in parentheses."),(0,a.yg)("p",null,"For example,"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},'Given numerator = 1, denominator = 2, return "0.5".'),(0,a.yg)("li",{parentName:"ul"},'Given numerator = 2, denominator = 1, return "2".'),(0,a.yg)("li",{parentName:"ul"},'Given numerator = 2, denominator = 3, return "0.(6)".')),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u8fd9\u9898\u7684\u96be\u70b9\u662f\u5982\u4f55\u627e\u5230\u65e0\u9650\u5faa\u73af\u7684\u90a3\u4e00\u6bb5\u3002\u4ed4\u7ec6\u56de\u60f3\u4e00\u4e0b\u4eba\u8111\u8fdb\u884c\u9664\u6cd5\u7684\u8fc7\u7a0b\uff0c\u4f1a\u53d1\u73b0\uff0c\u5f53\u4e00\u4e2a\u4f59\u6570\u7b2c\u4e8c\u6b21\u91cd\u590d\u51fa\u73b0\u65f6\uff0c\u5c31\u8bf4\u660e\u5c0f\u6570\u70b9\u540e\u5f00\u59cb\u65e0\u9650\u5faa\u73af\u4e86\u3002"),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Fraction to Recurring Decimal\n// Time Complexity: ?, Space Complexity: ?\npublic class Solution {\n    public String fractionToDecimal(int numerator, int denominator) {\n        if (numerator == 0) return \"0\";\n\n        final StringBuilder result = new StringBuilder();\n        // determine the sign\n        if ((numerator < 0) ^ (denominator < 0)) result.append('-');\n\n        // Integer.MIN_VALUE will overflow, so use long\n        // Math.abs(MIN_VALUE) will overflow\n        long n = numerator;\n        n = Math.abs(n);\n        long d = denominator;\n        d = Math.abs(d);\n\n        // append integral part\n        result.append(String.valueOf(n / d));\n        if (n % d == 0) return result.toString();\n        result.append('.');\n\n        final Map<Long, Integer> map = new HashMap<>();\n        // simulate the division process\n        for (long r = n % d; r != 0; r %= d) {\n            // find a existed remainder, so we reach\n            // the end of the repeating part\n            if (map.containsKey(r)) {\n                result.insert(map.get(r), \"(\");\n                result.append(')');\n                break;\n            }\n\n            map.put(r, result.length());\n\n            r *= 10;\n            result.append(Character.forDigit((int)(r/d), 10));\n        }\n\n        return result.toString();\n    }\n}\n")))}m.isMDXComponent=!0}}]);