"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5658],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>m});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=a.createContext({}),u=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},v=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(t),v=i,m=c["".concat(d,".").concat(v)]||c[v]||p[v]||r;return t?a.createElement(m,l(l({ref:n},s),{},{components:t})):a.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=v;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}v.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(96540),i=t(20053);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>p});var a=t(58168),i=t(96540),r=t(20053),l=t(92303),o=t(31682),d=t(86976),u=t(23104);const s={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:n,block:t,defaultValue:l,values:c,groupId:p,className:v}=e,m=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??m.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,o.X)(f,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===l?l:l??m.find((e=>e.props.default))?.props.value??m[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:k}=(0,d.x)(),[g,N]=(0,i.useState)(h),D=[],{blockElementScrollPositionUntilNextRender:L}=(0,u.a_)();if(null!=p){const e=y[p];null!=e&&e!==g&&f.some((n=>n.value===e))&&N(e)}const w=e=>{const n=e.currentTarget,t=D.indexOf(n),a=f[t].value;a!==g&&(L(n),N(a),null!=p&&k(p,String(a)))},O=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=D.indexOf(e.currentTarget)+1;n=D[t]??D[0];break}case"ArrowLeft":{const t=D.indexOf(e.currentTarget)-1;n=D[t]??D[D.length-1];break}}n?.focus()};return i.createElement("div",{className:(0,r.A)("tabs-container",s.tabList)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},v)},f.map((e=>{let{value:n,label:t,attributes:l}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:g===n?0:-1,"aria-selected":g===n,key:n,ref:e=>D.push(e),onKeyDown:O,onFocus:w,onClick:w},l,{className:(0,r.A)("tabs__item",s.tabItem,l?.className,{"tabs__item--active":g===n})}),t??n)}))),n?(0,i.cloneElement)(m.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},m.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==g})))))}function p(e){const n=(0,l.A)();return i.createElement(c,(0,a.A)({key:String(n)},e))}},3825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=t(58168),i=(t(96540),t(15680)),r=t(4865),l=t(19365);const o={title:"First Unique Number"},d=void 0,u={unversionedId:"linked-list/first-unique-number",id:"linked-list/first-unique-number",title:"First Unique Number",description:"\u63cf\u8ff0",source:"@site/docs/linked-list/first-unique-number.md",sourceDirName:"linked-list",slug:"/linked-list/first-unique-number",permalink:"/linked-list/first-unique-number",draft:!1,tags:[],version:"current",frontMatter:{title:"First Unique Number"},sidebar:"docs",previous:{title:"LFU Cache",permalink:"/linked-list/lfu-cache"},next:{title:"All O(1) Data Structure",permalink:"/linked-list/all-o1-data-structure"}},s={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],p={toc:c},v="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(v,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.yg)("p",null,"TODO"),(0,i.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.yg)("p",null,"\u672c\u9898\u8981\u505a\u5230\u7684\u6548\u679c\uff0c\u5c31\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u4f46\u8fd9\u4e2a\u961f\u5217\u6bd4\u8f83\u5947\u602a\uff0c\u53ea\u4fdd\u5b58\u4e0d\u91cd\u590d\u7684\u5143\u7d20\uff0c\u800c\u4e14\u5982\u679c\u6765\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u5bfc\u81f4\u4e2d\u95f4\u67d0\u4e2a\u5143\u7d20\u91cd\u590d\u4e86\uff0c\u8981\u5220\u9664\u4e2d\u95f4\u8fd9\u4e2a\u5143\u7d20\u3002\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff0c\u80fd\u505a\u5230\u4ee5O(1)\u7684\u901f\u5ea6\u5220\u9664\u4e2d\u95f4\u5143\u7d20\uff1f\u53ea\u80fd\u662f\u53cc\u5411\u94fe\u8868\u3002"),(0,i.yg)("p",null,"\u4e3a\u4e86\u80fdO(1)\u7684\u901f\u5ea6\u8bbf\u95ee\u53cc\u5411\u94fe\u8868\u4e2d\u95f4\u5143\u7d20\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2aHashMap\u6765\u4fdd\u5b58\u6bcf\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u4e00\u770b\uff0c\u672c\u9898\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\u8ddf",(0,i.yg)("a",{parentName:"p",href:"/linked-list/lru-cache"},"LRU Cache"),"\u4e00\u6a21\u4e00\u6837\u3002"),(0,i.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.yg)(r.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,i.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},"// First Unique Number\nclass FirstUnique {\n    private DLinkedList list = new DLinkedList();\n    private Set<Integer> visited = new HashSet<>();\n    private Map<Integer, DLinkedNode> m = new HashMap<>();\n\n    // O(n)\n    public FirstUnique(int[] nums) {\n        for (int num : nums) {\n            this.add(num);\n        }\n    }\n\n    // O(1)\n    public int showFirstUnique() {\n        DLinkedNode head = list.peekHead();\n        if (head != null) {\n            return head.value;\n        } else {\n            return -1;\n        }\n    }\n\n    // O(1)\n    public void add(int value) {\n        if (!visited.contains(value)) {\n            visited.add(value);\n            DLinkedNode node = new DLinkedNode(value);\n            list.offerTail(node);\n            m.put(value, node);\n        } else {\n            DLinkedNode node = m.get(value);\n            list.remove(node);\n            m.remove(value);\n        }\n    }\n\n    // Node of doubly linked list\n    static class DLinkedNode {\n        int value;\n        DLinkedNode prev, next;\n\n        DLinkedNode(int value) {\n            this.value = value;\n        }\n    }\n\n    // Doubly linked list\n    static class DLinkedList {\n        DLinkedNode head, tail;\n        int size;\n\n        DLinkedList() {\n            // head and tail are two dummy nodes\n            head = new DLinkedNode(0);\n            tail = new DLinkedNode(0);\n            head.next = tail;\n            tail.prev = head;\n        }\n\n        // Add a new node before tail\n        void offerTail(DLinkedNode node) {\n            node.next = tail;\n            node.prev = tail.prev;\n            tail.prev.next = node;\n            tail.prev = node;\n            size++;\n        }\n\n        // Remove a node in the middle\n        void remove(DLinkedNode node) {\n            if (node == null) return;\n            node.prev.next = node.next;\n            node.next.prev = node.prev;\n            size--;\n        }\n\n        boolean isEmpty() {\n            return size == 0;\n        }\n\n        DLinkedNode peekHead() {\n            return isEmpty()? null:head.next;\n        }\n    }\n}\n"))),(0,i.yg)(l.A,{value:"cpp",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"class FirstUnique {\nprivate:\n    // Node of doubly linked list\n    class DLinkedNode {\n    public:\n        int value;\n        DLinkedNode *prev=nullptr, *next=nullptr;\n\n        DLinkedNode(int value) {\n            this->value = value;\n        }\n    };\n\n    // Doubly linked list\n    class DLinkedList {\n    public:\n        DLinkedList() {\n            // head and tail are two dummy nodes\n            head = new DLinkedNode(0);\n            tail = new DLinkedNode(0);\n            head->next = tail;\n            tail->prev = head;\n        }\n\n        // Add a new node before tail\n        void offerTail(DLinkedNode *node) {\n            node->next = tail;\n            node->prev = tail->prev;\n            tail->prev->next = node;\n            tail->prev = node;\n            size++;\n        }\n\n        // Remove a node in the middle\n        void remove(DLinkedNode *node) {\n            if (node == nullptr) return;\n            node->prev->next = node->next;\n            node->next->prev = node->prev;\n            delete node;\n            size--;\n        }\n\n        bool isEmpty() {\n            return size == 0;\n        }\n\n        DLinkedNode* peekHead() {\n            return isEmpty()? nullptr : head->next;\n        }\n\n    private:\n        DLinkedNode *head, *tail;\n        int size = 0;\n    };\n\npublic:\n    // O(n)\n    FirstUnique(vector<int>& nums) {\n        for (int num : nums) {\n            this->add(num);\n        }\n\n    }\n\n    // O(1)\n    int showFirstUnique() {\n        DLinkedNode *head = list.peekHead();\n        if (head != nullptr) {\n            return head->value;\n        } else {\n            return -1;\n        }\n    }\n\n    // O(1)\n    void add(int value) {\n        if (visited.find(value) == visited.end()) {\n            visited.insert(value);\n            DLinkedNode *node = new DLinkedNode(value);\n            list.offerTail(node);\n            m[value] = node;\n        } else {\n            DLinkedNode *node = m[value];\n            list.remove(node);\n            m.erase(value);\n        }\n    }\n\nprivate:\n    DLinkedList list;\n    unordered_set<int> visited;\n    unordered_map<int, DLinkedNode*> m;\n};\n")))),(0,i.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/linked-list/lru-cache"},"LRU Cache"))))}m.isMDXComponent=!0}}]);