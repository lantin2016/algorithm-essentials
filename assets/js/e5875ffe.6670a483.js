"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5399],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>g});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return t?a.createElement(g,o(o({ref:n},p),{},{components:t})):a.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(96540),r=t(20053);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(58168),r=t(96540),i=t(20053),o=t(92303),l=t(31682),s=t(86976),u=t(23104);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:n,block:t,defaultValue:o,values:c,groupId:d,className:m}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=c??g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),f=(0,l.X)(y,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!y.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:h}=(0,s.x)(),[N,j]=(0,r.useState)(b),k=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.a_)();if(null!=d){const e=v[d];null!=e&&e!==N&&y.some((n=>n.value===e))&&j(e)}const O=e=>{const n=e.currentTarget,t=k.indexOf(n),a=y[t].value;a!==N&&(w(n),j(a),null!=d&&h(d,String(a)))},T=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=k.indexOf(e.currentTarget)+1;n=k[t]??k[0];break}case"ArrowLeft":{const t=k.indexOf(e.currentTarget)-1;n=k[t]??k[k.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,i.A)("tabs-container",p.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},m)},y.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:e=>k.push(e),onKeyDown:T,onFocus:O,onClick:O},o,{className:(0,i.A)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":N===n})}),t??n)}))),n?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==N})))))}function d(e){const n=(0,o.A)();return r.createElement(c,(0,a.A)({key:String(n)},e))}},85176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=t(58168),r=(t(96540),t(15680)),i=t(4865),o=t(19365);const l={title:"Android Unlock Patterns"},s=void 0,u={unversionedId:"dfs/android-unlock-patterns",id:"dfs/android-unlock-patterns",title:"Android Unlock Patterns",description:"\u63cf\u8ff0",source:"@site/docs/dfs/android-unlock-patterns.md",sourceDirName:"dfs",slug:"/dfs/android-unlock-patterns",permalink:"/dfs/android-unlock-patterns",draft:!1,tags:[],version:"current",frontMatter:{title:"Android Unlock Patterns"},sidebar:"docs",previous:{title:"Word Search",permalink:"/dfs/word-search"},next:{title:"Robot Room Cleaner",permalink:"/dfs/robot-room-cleaner"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],d={toc:c},m="wrapper";function g(e){let{components:n,...l}=e;return(0,r.yg)(m,(0,a.A)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"Android devices have a special lock screen with a ",(0,r.yg)("inlineCode",{parentName:"p"},"3 x 3"),' grid of dots. Users can set an "unlock pattern" by connecting the dots in a specific sequence, forming a series of joined line segments where each segment\'s endpoints are two consecutive dots in the sequence. A sequence of ',(0,r.yg)("inlineCode",{parentName:"p"},"k")," dots is a ",(0,r.yg)("strong",{parentName:"p"},"valid")," unlock pattern if both of the following are true:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"All the dots in the sequence are ",(0,r.yg)("strong",{parentName:"li"},"distinct"),"."),(0,r.yg)("li",{parentName:"ul"},"If the line segment connecting two consecutive dots in the sequence passes through any other dot, the other dot ",(0,r.yg)("strong",{parentName:"li"},"must have previously appeared")," in the sequence. No jumps through non-selected dots are allowed.")),(0,r.yg)("p",null,"Here are some example valid and invalid unlock patterns:"),(0,r.yg)("p",null,(0,r.yg)("img",{src:t(91922).A,width:"418",height:"128"})),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The 1st pattern ",(0,r.yg)("inlineCode",{parentName:"li"},"[4,1,3,6]")," is invalid because the line connecting dots 1 and 3 pass through dot 2, but dot 2 did not previously appear in the sequence."),(0,r.yg)("li",{parentName:"ul"},"The 2nd pattern ",(0,r.yg)("inlineCode",{parentName:"li"},"[4,1,9,2]")," is invalid because the line connecting dots 1 and 9 pass through dot 5, but dot 5 did not previously appear in the sequence."),(0,r.yg)("li",{parentName:"ul"},"The 3rd pattern ",(0,r.yg)("inlineCode",{parentName:"li"},"[2,4,1,3,6]")," is valid because it follows the conditions. The line connecting dots 1 and 3 meets the condition because dot 2 previously appeared in the sequence."),(0,r.yg)("li",{parentName:"ul"},"The 4th pattern ",(0,r.yg)("inlineCode",{parentName:"li"},"[6,5,4,1,9,2]")," is valid because it follows the conditions. The line connecting dots 1 and 9 meets the condition because dot 5 previously appeared in the sequence.")),(0,r.yg)("p",null,"Given two integers ",(0,r.yg)("inlineCode",{parentName:"p"},"m")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"n"),", return ",(0,r.yg)("strong",{parentName:"p"},"the number of unique and valid unlock patterns")," of the Android grid lock screen that consist of at least ",(0,r.yg)("inlineCode",{parentName:"p"},"m")," keys and at most ",(0,r.yg)("inlineCode",{parentName:"p"},"n")," keys."),(0,r.yg)("p",null,"Two unlock patterns are considered ",(0,r.yg)("strong",{parentName:"p"},"unique")," if there is a dot in one sequence that is not in the other, or the order of the dots is different."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 1"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": m = 1, n = 1",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Output"),": 9")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 2"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": m = 1, n = 2",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Output"),": 65")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Constraints"),":"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"1 <= m, n <= 9"))),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"\u6df1\u641c\uff0c\u914d\u5408\u5927\u91cf\u526a\u679d\u3002"),(0,r.yg)("p",null,"\u526a\u679d\u901a\u5e38\u9700\u8981\u6df1\u5165\u7406\u89e3\u9898\u610f\uff0c\u638c\u63e1\u9886\u57df\u77e5\u8bc6\uff08domain knowledge\uff09\u3002\u672c\u9898\u6709\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u7279\u6027\u662f\uff0c1,3,5,7 \u8fd9 4 \u4e2a\u70b9\u662f\u4e92\u76f8\u5bf9\u79f0\u7684\uff0c\u5373\u4ee5 1 \u4f5c\u4e3a\u8d77\u70b9\uff0c\u5f97\u5230\u7684\u6709\u6548\u6a21\u5f0f\u7684\u4e2a\u6570\uff0c\u4e0e\u4ee5 3 \u4f5c\u4e3a\u8d77\u70b9\uff0c\u5f97\u5230\u7684\u6709\u6548\u6a21\u5f0f\u7684\u4e2a\u6570\uff0c\u662f\u76f8\u7b49\u7684\uff0c5, 7 \u4e5f\u662f\u7c7b\u4f3c\u3002\u540c\u7406\uff0c2,4,6,8 \u8fd9 4 \u4e2a\u70b9\u4e5f\u662f\u5bf9\u79f0\u7684\u3002"),(0,r.yg)("p",null,"\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ee4 ",(0,r.yg)("inlineCode",{parentName:"p"},"f[i]"),"\u8868\u793a\u4ee5",(0,r.yg)("inlineCode",{parentName:"p"},"i"),"\u4e3a\u8d77\u70b9\u7684\u6709\u6548\u6a21\u5f0f\u7684\u4e2a\u6570\uff0c\u603b\u6570\u5c31\u662f ",(0,r.yg)("inlineCode",{parentName:"p"},"f[1]*4+f[2]*4+f[5]"),"\u3002"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)(i.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// Android Unlock Patterns\n// Time Complexity O(n!), Space Complexity: O(n)\npublic class Solution {\n\n    public int numberOfPatterns(int m, int n) {\n        int[][] jumps = build_jump_table();\n        boolean[] visited = new boolean[10];\n\n        int count = 0;\n        for(int i = m; i <= n; ++i) {\n            count += dfs(visited, jumps, 1, i - 1) * 4;  // 1, 3, 7, 9 are symmetric\n            count += dfs(visited, jumps, 2, i - 1) * 4;  // 2, 4, 6, 8 are symmetric\n            count += dfs(visited, jumps, 5, i - 1);      // 5\n        }\n        return count;\n    }\n\n    private static int dfs(boolean visited[], int[][] jumps, int num, int remain) {\n        if(remain == 0) return 1;\n\n        int count = 0;\n        visited[num] = true;\n        for(int i = 1; i <= 9; ++i) {\n            int mid = jumps[num][i]; // Edge num->i jumps over mid\n            if(!visited[i] && (mid == 0 || (visited[mid]))) {\n                count += dfs(visited, jumps, i, remain - 1);\n            }\n        }\n        visited[num] = false;\n        return count;\n    }\n\n    private int[][] build_jump_table() {\n        int[][] jumps = new int[10][10]; // jump table, 0 means adjacent\n        jumps[1][3] = jumps[3][1] = 2; // The edge 1->3 jumps over 2\n        jumps[1][7] = jumps[7][1] = 4;\n        jumps[3][9] = jumps[9][3] = 6;\n        jumps[7][9] = jumps[9][7] = 8;\n        jumps[2][8] = jumps[8][2] = jumps[4][6] = jumps[6][4] = 5;\n        jumps[1][9] = jumps[9][1] = jumps[3][7] = jumps[7][3] = 5;\n        return jumps;\n    }\n}\n"))),(0,r.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// TODO\n")))))}g.isMDXComponent=!0},91922:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/android-unlock-0f4c54baaeab7dbcdefb69fccd511841.png"}}]);