"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8324],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>d});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),u=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(c.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(t),f=r,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||l;return t?a.createElement(d,i(i({ref:n},s),{},{components:t})):a.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=f;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>p});var a=t(58168),r=t(96540),l=t(20053),i=t(92303),o=t(31682),c=t(86976),u=t(23104);const s={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function m(e){const{lazy:n,block:t,defaultValue:i,values:m,groupId:p,className:f}=e,d=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??d.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,o.X)(g,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??d.find((e=>e.props.default))?.props.value??d[0].props.value;if(null!==v&&!g.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:j}=(0,c.x)(),[h,x]=(0,r.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.a_)();if(null!=p){const e=y[p];null!=e&&e!==h&&g.some((n=>n.value===e))&&x(e)}const T=e=>{const n=e.currentTarget,t=O.indexOf(n),a=g[t].value;a!==h&&(w(n),x(a),null!=p&&j(p,String(a)))},E=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,l.A)("tabs-container",s.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},f)},g.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:h===n?0:-1,"aria-selected":h===n,key:n,ref:e=>O.push(e),onKeyDown:E,onFocus:T,onClick:T},i,{className:(0,l.A)("tabs__item",s.tabItem,i?.className,{"tabs__item--active":h===n})}),t??n)}))),n?(0,r.cloneElement)(d.filter((e=>e.props.value===h))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},d.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==h})))))}function p(e){const n=(0,i.A)();return r.createElement(m,(0,a.A)({key:String(n)},e))}},9930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var a=t(58168),r=(t(96540),t(15680)),l=t(4865),i=t(19365);const o={title:"Maximal Rectangle"},c=void 0,u={unversionedId:"dp/maximal-rectangle",id:"dp/maximal-rectangle",title:"Maximal Rectangle",description:"\u63cf\u8ff0",source:"@site/docs/dp/maximal-rectangle.md",sourceDirName:"dp",slug:"/dp/maximal-rectangle",permalink:"/dp/maximal-rectangle",draft:!1,tags:[],version:"current",frontMatter:{title:"Maximal Rectangle"},sidebar:"docs",previous:{title:"Palindrome Partitioning II",permalink:"/dp/palindrome-partitioning-ii"},next:{title:"Maximal Square",permalink:"/dp/maximal-square"}},s={},m=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:m},f="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(f,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area."),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"\u65e0"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// Maximal Rectangle\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public int maximalRectangle(char[][] matrix) {\n        if (matrix.length == 0)  return 0;\n\n        final int m = matrix.length;\n        final int n = matrix[0].length;\n        int[] H = new int[n];\n        int[] L = new int[n];\n        int[] R = new int[n];\n        Arrays.fill(R, n);\n\n        int ret = 0;\n        for (int i = 0; i < m; ++i) {\n            int left = 0, right = n;\n            // calculate L(i, j) from left to right\n            for (int j = 0; j < n; ++j) {\n                if (matrix[i][j] == '1') {\n                    ++H[j];\n                    L[j] = Math.max(L[j], left);\n                } else {\n                    left = j+1;\n                    H[j] = 0; L[j] = 0; R[j] = n;\n                }\n            }\n            // calculate R(i, j) from right to left\n            for (int j = n-1; j >= 0; --j) {\n                if (matrix[i][j] == '1') {\n                    R[j] = Math.min(R[j], right);\n                    ret = Math.max(ret, H[j]*(R[j]-L[j]));\n                } else {\n                    right = j;\n                }\n            }\n        }\n        return ret;\n    }\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Maximal Rectangle\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int maximalRectangle(vector<vector<char> > &matrix) {\n        if (matrix.empty())  return 0;\n\n        const int m = matrix.size();\n        const int n = matrix[0].size();\n        vector<int> H(n, 0);\n        vector<int> L(n, 0);\n        vector<int> R(n, n);\n\n        int ret = 0;\n        for (int i = 0; i < m; ++i) {\n            int left = 0, right = n;\n            // calculate L(i, j) from left to right\n            for (int j = 0; j < n; ++j) {\n                if (matrix[i][j] == '1') {\n                    ++H[j];\n                    L[j] = max(L[j], left);\n                } else {\n                    left = j+1;\n                    H[j] = 0; L[j] = 0; R[j] = n;\n                }\n            }\n            // calculate R(i, j) from right to left\n            for (int j = n-1; j >= 0; --j) {\n                if (matrix[i][j] == '1') {\n                    R[j] = min(R[j], right);\n                    ret = max(ret, H[j]*(R[j]-L[j]));\n                } else {\n                    right = j;\n                }\n            }\n        }\n        return ret;\n    }\n};\n")))))}d.isMDXComponent=!0}}]);