"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[1932],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),b=a,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||l;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},19365:(e,t,r)=>{r.d(t,{A:()=>o});var n=r(96540),a=r(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,o),hidden:r},t)}},4865:(e,t,r)=>{r.d(t,{A:()=>p});var n=r(58168),a=r(96540),l=r(20053),o=r(92303),i=r(31682),s=r(86976),c=r(23104);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:t,block:r,defaultValue:o,values:d,groupId:p,className:b}=e,m=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??m.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,i.X)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===o?o:o??m.find((e=>e.props.default))?.props.value??m[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:g}=(0,s.x)(),[T,O]=(0,a.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,c.a_)();if(null!=p){const e=v[p];null!=e&&e!==T&&f.some((t=>t.value===e))&&O(e)}const N=e=>{const t=e.currentTarget,r=w.indexOf(t),n=f[r].value;n!==T&&(E(t),O(n),null!=p&&g(p,String(n)))},j=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=w.indexOf(e.currentTarget)+1;t=w[r]??w[0];break}case"ArrowLeft":{const r=w.indexOf(e.currentTarget)-1;t=w[r]??w[w.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,l.A)("tabs-container",u.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},b)},f.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:j,onFocus:N,onClick:N},o,{className:(0,l.A)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":T===t})}),r??t)}))),t?(0,a.cloneElement)(m.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},m.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function p(e){const t=(0,o.A)();return a.createElement(d,(0,n.A)({key:String(t)},e))}},7363:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(58168),a=(r(96540),r(15680)),l=r(4865),o=r(19365);const i={title:"Balanced Binary Tree"},s=void 0,c={unversionedId:"binary-tree/traversal/balanced-binary-tree",id:"binary-tree/traversal/balanced-binary-tree",title:"Balanced Binary Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/traversal/balanced-binary-tree.md",sourceDirName:"binary-tree/traversal",slug:"/binary-tree/traversal/balanced-binary-tree",permalink:"/binary-tree/traversal/balanced-binary-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Balanced Binary Tree"},sidebar:"docs",previous:{title:"Symmetric Tree",permalink:"/binary-tree/traversal/symmetric-tree"},next:{title:"Flatten Binary Tree to Linked List",permalink:"/binary-tree/traversal/flatten-binary-tree-to-linked-list"}},u={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:d},b="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(b,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given a binary tree, determine if it is height-balanced."),(0,a.yg)("p",null,"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1."),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u65e0"),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Balanced Binary Tree\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public boolean isBalanced (TreeNode root) {\n        return balancedHeight (root) >= 0;\n    }\n\n    /**\n     * Returns the height of `root` if `root` is a balanced tree,\n     * otherwise, returns `-1`.\n     */\n    private static int balancedHeight (TreeNode root) {\n        if (root == null) return 0;  // \u7ec8\u6b62\u6761\u4ef6\n\n        int left = balancedHeight (root.left);\n        int right = balancedHeight (root.right);\n\n        if (left < 0 || right < 0 || Math.abs(left - right) > 1) return -1;  // \u526a\u679d\n\n        return Math.max(left, right) + 1; // \u4e09\u65b9\u5408\u5e76\n    }\n}\n"))),(0,a.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Balanced Binary Tree\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    bool isBalanced (TreeNode* root) {\n        return balancedHeight (root) >= 0;\n    }\n\n    /**\n     * Returns the height of `root` if `root` is a balanced tree,\n     * otherwise, returns `-1`.\n     */\n    int balancedHeight (TreeNode* root) {\n        if (root == nullptr) return 0;  // \u7ec8\u6b62\u6761\u4ef6\n\n        int left = balancedHeight (root->left);\n        int right = balancedHeight (root->right);\n\n        if (left < 0 || right < 0 || abs(left - right) > 1) return -1;  // \u526a\u679d\n\n        return max(left, right) + 1; // \u4e09\u65b9\u5408\u5e76\n    }\n};\n")))))}m.isMDXComponent=!0}}]);