"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4679],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return t?a.createElement(g,i(i({ref:n},u),{},{components:t})):a.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,i),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(58168),r=t(96540),l=t(20053),i=t(92303),o=t(31682),s=t(86976),p=t(23104);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function m(e){const{lazy:n,block:t,defaultValue:i,values:m,groupId:c,className:d}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,o.X)(y,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===i?i:i??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!y.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,s.x)(),[w,N]=(0,r.useState)(b),T=[],{blockElementScrollPositionUntilNextRender:z}=(0,p.a_)();if(null!=c){const e=f[c];null!=e&&e!==w&&y.some((n=>n.value===e))&&N(e)}const x=e=>{const n=e.currentTarget,t=T.indexOf(n),a=y[t].value;a!==w&&(z(n),N(a),null!=c&&v(c,String(a)))},O=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,l.A)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},d)},y.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>T.push(e),onKeyDown:O,onFocus:x,onClick:x},i,{className:(0,l.A)("tabs__item",u.tabItem,i?.className,{"tabs__item--active":w===n})}),t??n)}))),n?(0,r.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function c(e){const n=(0,i.A)();return r.createElement(m,(0,a.A)({key:String(n)},e))}},7058:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var a=t(58168),r=(t(96540),t(15680)),l=t(4865),i=t(19365);const o={title:"The Maze"},s=void 0,p={unversionedId:"bfs/graph/the-maze",id:"bfs/graph/the-maze",title:"The Maze",description:"\u63cf\u8ff0",source:"@site/docs/bfs/graph/the-maze.md",sourceDirName:"bfs/graph",slug:"/bfs/graph/the-maze",permalink:"/bfs/graph/the-maze",draft:!1,tags:[],version:"current",frontMatter:{title:"The Maze"},sidebar:"docs",previous:{title:"Surrounded Regions",permalink:"/bfs/graph/surrounded-regions"},next:{title:"The Maze II",permalink:"/bfs/graph/the-maze-ii"}},u={},m=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"DFS",id:"dfs",level:4},{value:"BFS",id:"bfs",level:4},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],c={toc:m},d="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.yg)("p",null,"There is a ball in a maze with empty spaces (represented as 0) and walls (represented as 1). The ball can go through the empty spaces by rolling up, down, left or right, but it won't stop rolling until hitting a wall. When the ball stops, it could choose the next direction."),(0,r.yg)("p",null,"Given the maze, the ball's start position and the ",(0,r.yg)("inlineCode",{parentName:"p"},"destination"),", where ",(0,r.yg)("code",null,"start = ","[start",(0,r.yg)("sub",null,"row"),", start",(0,r.yg)("sub",null,"col"),"]")," and ",(0,r.yg)("code",null,"destination = ","[destination",(0,r.yg)("sub",null,"row"),", destination",(0,r.yg)("sub",null,"col"),"]"),", return ",(0,r.yg)("inlineCode",{parentName:"p"},"true")," if the ball can stop at the destination, otherwise return false."),(0,r.yg)("p",null,"You may assume that the borders of the maze are all walls (see examples)."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 1"),":"),(0,r.yg)("img",{src:"/img/maze1.png",width:"60%"}),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": maze = [","[0,0,1,0,0]",",","[0,0,0,0,0]",",","[0,0,0,1,0]",",","[1,1,0,1,1]",",","[0,0,0,0,0]","], start = ","[0,4]",", destination = ","[4,4]",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Output"),": true",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Explanation"),": One possible way is : left -> down -> left -> down -> right -> down -> right.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 2"),":"),(0,r.yg)("img",{src:"/img/maze2.png",width:"60%"}),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": maze = [","[0,0,1,0,0]",",","[0,0,0,0,0]",",","[0,0,0,1,0]",",","[1,1,0,1,1]",",","[0,0,0,0,0]","], start = ","[0,4]",", destination = ","[3,2]",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Output"),": false",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Explanation"),": There is no way for the ball to stop at the destination. Notice that you can pass through the destination but you cannot stop there.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example 3"),":"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Input"),": maze = [","[0,0,0,0,0]",",","[1,1,0,0,1]",",","[0,0,0,0,0]",",","[0,1,0,0,1]",",","[0,1,0,0,0]","], start = ","[4,3]",", destination = ","[0,1]",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Output"),": false")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Constraints"),":"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"1 <= maze.length, maze","[i]",".length <= 100"),(0,r.yg)("li",{parentName:"ul"},"maze","[i][j]"," is 0 or 1."),(0,r.yg)("li",{parentName:"ul"},"start.length == 2"),(0,r.yg)("li",{parentName:"ul"},"destination.length == 2"),(0,r.yg)("li",{parentName:"ul"},"0 <= start",(0,r.yg)("sub",null,"row"),", destination",(0,r.yg)("sub",null,"row")," <= maze.length"),(0,r.yg)("li",{parentName:"ul"},"0 <= start",(0,r.yg)("sub",null,"col"),", destination",(0,r.yg)("sub",null,"col")," <= maze","[i]",".length"),(0,r.yg)("li",{parentName:"ul"},"Both the ball and the destination exist on an empty space, and they will not be at the same position initially."),(0,r.yg)("li",{parentName:"ul"},"The maze contains at ",(0,r.yg)("strong",{parentName:"li"},"least 2 empty spaces"),".")),(0,r.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.yg)("p",null,"\u53ea\u9700\u8981\u8f93\u51fa ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),"\u6216\u8005",(0,r.yg)("inlineCode",{parentName:"p"},"false"),", \u7528 DFS \u548c BFS \u90fd\u53ef\u4ee5\u3002"),(0,r.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.yg)("h4",{id:"dfs"},"DFS"),(0,r.yg)(l.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"# The Maze\n# DFS\n# Time Complexity: O(mn), Space Complexity: O(mn)\nclass Solution:\n    def hasPath(self, maze: List[List[int]], start: List[int], destination: List[int]) -> bool:\n        m, n, visited = len(maze), len(maze[0]), set()\n        def dfs(x, y):\n            if (x, y) in visited:\n                return False\n            visited.add((x, y))\n            if [x, y] == destination:\n                return True\n            for i, j in (-1, 0), (1, 0), (0, -1), (0, 1):\n                newX, newY = x, y\n                #  The ball won't stop rolling until hitting a wall\n                while 0 <= newX + i < m and 0 <= newY + j < n and maze[newX + i][newY + j] != 1:\n                    newX += i\n                    newY += j\n                if dfs(newX, newY):\n                    return True\n            return False\n\n        return dfs(*start)\n"))),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"// The Maze\n// DFS\n// Time Complexity: O(mn), Space Complexity: O(mn)\nclass Solution {\n    public boolean hasPath(int[][] maze, int[] start, int[] destination) {\n        int m = maze.length;\n        int n = maze[0].length;\n        boolean[][] visited = new boolean[m][n];\n        return dfs(maze, destination, start, visited);\n    }\n\n    private boolean dfs(int[][] maze, int[] destination, int[] pos, boolean[][] visited) {\n        int m = maze.length;\n        int n = maze[0].length;\n        if (visited[pos[0]][pos[1]]) return false;\n        visited[pos[0]][pos[1]] = true;\n        if (Arrays.equals(destination, pos)) return true;\n\n        int[][] directions={{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n        for(int[] direction : directions) {\n            int i = direction[0], j = direction[1];\n            int[] newPos = pos.clone();\n            // The ball won't stop rolling until hitting a wall\n            while(0 <= newPos[0]+i && newPos[0]+i < m && 0 <= newPos[1]+j && newPos[1]+j < n && maze[newPos[0] + i][newPos[1] + j] != 1) {\n                newPos[0] += i;\n                newPos[1] += j;\n            }\n            if (dfs(maze, destination, newPos, visited)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// The Maze\n// DFS\n// Time Complexity: O(mn), Space Complexity: O(mn)\nclass Solution {\npublic:\n    bool hasPath(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {\n        int m = maze.size();\n        int n = maze[0].size();\n        vector<vector<bool>> visited(m, vector<bool>(n));\n        return dfs(maze, destination, start, visited);\n    }\n\n    bool dfs(const vector<vector<int>>& maze, const vector<int>& destination, const vector<int>& pos, vector<vector<bool>>& visited) {\n        int m = maze.size();\n        int n = maze[0].size();\n        if (visited[pos[0]][pos[1]]) return false;\n        visited[pos[0]][pos[1]] = true;\n        if (destination == pos) return true;\n\n        vector<vector<int>> directions={{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n        for(const vector<int>& direction : directions) {\n            int i = direction[0], j = direction[1];\n            vector<int> newPos(pos);\n            // The ball won't stop rolling until hitting a wall\n            while(0 <= newPos[0]+i && newPos[0]+i < m && 0 <= newPos[1]+j && newPos[1]+j < n && maze[newPos[0] + i][newPos[1] + j] != 1) {\n                newPos[0] += i;\n                newPos[1] += j;\n            }\n            if (dfs(maze, destination, newPos, visited)) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n")))),(0,r.yg)("h4",{id:"bfs"},"BFS"),(0,r.yg)(l.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"# The Maze\n# BFS\n# Time Complexity: O(mn), Space Complexity: O(mn)\nclass Solution:\n    def hasPath(self, maze, start, destination):\n        m = len(maze)\n        n = len(maze[0])\n        q = deque([start])\n\n        # Do NOT use visited = [[False] * n] * m\n        visited = [[False] * n for _ in range(m)]\n        visited[start[0]][start[1]] = True\n\n        while q:\n            x, y = q.popleft()\n            if [x, y] == destination: return True\n\n            for i, j in (-1, 0), (1, 0), (0, -1), (0, 1):\n                newX, newY = x, y\n                #  The ball won't stop rolling until hitting a wall\n                while 0 <= newX + i < m and 0 <= newY + j < n and maze[newX + i][newY + j] == 0:\n                    newX += i\n                    newY += j\n                if not visited[newX][newY]:\n                    q.append([newX, newY])\n                    visited[newX][newY] = True\n\n        return False\n"))),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"TODO\n"))),(0,r.yg)(i.A,{value:"cpp",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"TODO\n")))),(0,r.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/bfs/graph/the-maze-ii"},"The Maze II")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/bfs/graph/the-maze-iii"},"The Maze III"))))}g.isMDXComponent=!0}}]);