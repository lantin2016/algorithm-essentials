"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[6944],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=s(t),d=a,y=g["".concat(p,".").concat(d)]||g[d]||u[d]||i;return t?r.createElement(y,l(l({ref:n},c),{},{components:t})):r.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},18999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=t(58168),a=(t(96540),t(15680));const i={title:"Word Pattern"},l=void 0,o={unversionedId:"string/word-pattern",id:"string/word-pattern",title:"Word Pattern",description:"\u63cf\u8ff0",source:"@site/docs/string/word-pattern.md",sourceDirName:"string",slug:"/string/word-pattern",permalink:"/string/word-pattern",draft:!1,tags:[],version:"current",frontMatter:{title:"Word Pattern"},sidebar:"docs",previous:{title:"Isomorphic Strings",permalink:"/string/isomorphic-strings"},next:{title:"Decode String",permalink:"/string/decode-string"}},p={},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],c={toc:s},g="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Given a ",(0,a.yg)("inlineCode",{parentName:"p"},"pattern")," and a string ",(0,a.yg)("inlineCode",{parentName:"p"},"str"),", find if ",(0,a.yg)("inlineCode",{parentName:"p"},"str")," follows the same pattern."),(0,a.yg)("p",null,"Here follow means a full match, such that there is a bijection between a letter in ",(0,a.yg)("inlineCode",{parentName:"p"},"pattern")," and a non-empty word in ",(0,a.yg)("inlineCode",{parentName:"p"},"str"),"."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Examples"),":"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"pattern = ",(0,a.yg)("inlineCode",{parentName:"li"},'"abba"'),", str = ",(0,a.yg)("inlineCode",{parentName:"li"},'"dog cat cat dog"')," should return true."),(0,a.yg)("li",{parentName:"ol"},"pattern = ",(0,a.yg)("inlineCode",{parentName:"li"},'"abba"'),", str = ",(0,a.yg)("inlineCode",{parentName:"li"},'"dog cat cat fish"')," should return false."),(0,a.yg)("li",{parentName:"ol"},"pattern = ",(0,a.yg)("inlineCode",{parentName:"li"},'"aaaa"'),", str = ",(0,a.yg)("inlineCode",{parentName:"li"},'"dog cat cat dog"')," should return false."),(0,a.yg)("li",{parentName:"ol"},"pattern = ",(0,a.yg)("inlineCode",{parentName:"li"},'"abba"'),", str = ",(0,a.yg)("inlineCode",{parentName:"li"},'"dog dog dog dog"')," should return false.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Notes"),":"),(0,a.yg)("p",null,"You may assume ",(0,a.yg)("inlineCode",{parentName:"p"},"pattern")," contains only lowercase letters, and ",(0,a.yg)("inlineCode",{parentName:"p"},"str")," contains lowercase letters separated by a single space."),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,'\u672c\u9898\u8ddf "Isomorphic Strings" \u5f88\u7c7b\u4f3c\uff0c\u7528\u4e24\u4e2aHashMap, \u8bb0\u5f55\u4ece\u5b57\u7b26\u5230\u5b57\u7b26\u4e32\u548c\u5b57\u7b26\u4e32\u5230\u5b57\u7b26\u7684\u6620\u5c04\u3002'),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'// Word Pattern\n// Time Complexity: O(n), Space Complexity: O(n)\npublic class Solution {\n    public boolean wordPattern(String pattern, String str) {\n        String[] words = str.split(" ");\n        if (words.length != pattern.length()) return false;\n\n        final Map<Character, String> map1 = new HashMap<>();\n        final Map<String, Character> map2 = new HashMap<>();\n        for (int i = 0; i < words.length; ++i) {\n            final Character key1 = pattern.charAt(i);\n            if (map1.containsKey(key1)) {\n                final String value = map1.get(key1);\n                if (!value.equals(words[i])) return false;\n            } else {\n                map1.put(key1, words[i]);\n            }\n\n            final String key2 = words[i];\n            if (map2.containsKey(key2)) {\n                final char value = map2.get(key2);\n                if (value != pattern.charAt(i)) return false;\n            } else {\n                map2.put(key2, pattern.charAt(i));\n            }\n        }\n        return true;\n    }\n}\n')),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/string/isomorphic-strings"},"Isomorphic Strings"))))}u.isMDXComponent=!0}}]);