"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2273],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>d});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},y="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),y=c(t),f=a,d=y["".concat(p,".").concat(f)]||y[f]||s[f]||o;return t?n.createElement(d,i(i({ref:r},u),{},{components:t})):n.createElement(d,i({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[y]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},81983:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(58168),a=(t(96540),t(15680));const o={title:"Invert Binary Tree"},i=void 0,l={unversionedId:"binary-tree/traversal/invert-binary-tree",id:"binary-tree/traversal/invert-binary-tree",title:"Invert Binary Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/traversal/invert-binary-tree.md",sourceDirName:"binary-tree/traversal",slug:"/binary-tree/traversal/invert-binary-tree",permalink:"/binary-tree/traversal/invert-binary-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Invert Binary Tree"},sidebar:"docs",previous:{title:"Binary Tree Right Side View",permalink:"/binary-tree/traversal/binary-tree-right-side-view"},next:{title:"Binary Search Tree Iterator",permalink:"/binary-tree/traversal/binary-search-tree-iterator"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u89e3\u6cd5 1 \u5c42\u6b21\u904d\u5386",id:"\u89e3\u6cd5-1-\u5c42\u6b21\u904d\u5386",level:3},{value:"\u89e3\u6cd5 2 \u9012\u5f52",id:"\u89e3\u6cd5-2-\u9012\u5f52",level:3}],u={toc:c},y="wrapper";function s(e){let{components:r,...t}=e;return(0,a.yg)(y,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"Invert a binary tree."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"     4\n   /   \\\n  2     7\n / \\   / \\\n1   3 6   9\n")),(0,a.yg)("p",null,"to"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"     4\n   /   \\\n  7     2\n / \\   / \\\n9   6 3   1\n")),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"\u8fd9\u9898\u662f\u5927\u540d\u9f0e\u9f0e\u7684 Homebrew \u7684\u4f5c\u8005 Max Howell \u5728 Twitter \u4e0a\u53d1\u7262\u9a9a\u7684\u90a3\u9053\u9898\u3002\u539f\u59cb Tweet \u5730\u5740\uff1a",(0,a.yg)("a",{parentName:"p",href:"https://twitter.com/mxcl/status/608682016205344768"},"https://twitter.com/mxcl/status/608682016205344768")),(0,a.yg)("p",null,"\u8fd9\u9898\u6700\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u662f\u5c42\u6b21\u904d\u5386\uff0c\u6bcf\u6b21\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002"),(0,a.yg)("p",null,"\u4f46\u662f\uff0c\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528\u9012\u5f52\u89e3\u51b3\uff0c\u4ee3\u7801\u975e\u5e38\u77ed\u3002"),(0,a.yg)("h3",{id:"\u89e3\u6cd5-1-\u5c42\u6b21\u904d\u5386"},"\u89e3\u6cd5 1 \u5c42\u6b21\u904d\u5386"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Invert Binary Tree\n// Time Complexity: O(n), Space Complexity: O(n)\npublic class Solution {\n    public TreeNode invertTree(TreeNode root) {\n        Queue<TreeNode> q = new LinkedList<>();\n        if (root != null) q.offer(root);\n\n        while (!q.isEmpty()) {\n            TreeNode node = q.poll();\n            // swap left and right\n            TreeNode tmp = node.left;\n            node.left = node.right;\n            node.right = tmp;\n\n            if (node.left != null) q.offer(node.left);\n            if (node.right != null) q.offer(node.right);\n        }\n        return root;\n    }\n}\n")),(0,a.yg)("h3",{id:"\u89e3\u6cd5-2-\u9012\u5f52"},"\u89e3\u6cd5 2 \u9012\u5f52"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// Invert Binary Tree\n// Time Complexity: O(n), Space Complexity: O(n)\npublic class Solution {\n    public TreeNode invertTree(TreeNode root) {\n        if (root == null) return root;\n\n        TreeNode tmp = root.left;\n        root.left = invertTree(root.right);\n        root.right = invertTree(tmp);\n\n        return root;\n    }\n}\n")))}s.isMDXComponent=!0}}]);