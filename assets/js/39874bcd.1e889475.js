"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[1651],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>h});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,h=p["".concat(i,".").concat(d)]||p[d]||m[d]||l;return r?a.createElement(h,o(o({ref:t},c),{},{components:r})):a.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:n,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},19365:(e,t,r)=>{r.d(t,{A:()=>o});var a=r(96540),n=r(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,o),hidden:r},t)}},4865:(e,t,r)=>{r.d(t,{A:()=>m});var a=r(58168),n=r(96540),l=r(20053),o=r(92303),s=r(31682),i=r(86976),u=r(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:r,defaultValue:o,values:p,groupId:m,className:d}=e,h=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??h.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),f=(0,s.X)(b,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:y}=(0,i.x)(),[O,T]=(0,n.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:x}=(0,u.a_)();if(null!=m){const e=g[m];null!=e&&e!==O&&b.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,r=w.indexOf(t),a=b[r].value;a!==O&&(x(t),T(a),null!=m&&y(m,String(a)))},k=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=w.indexOf(e.currentTarget)+1;t=w[r]??w[0];break}case"ArrowLeft":{const r=w.indexOf(e.currentTarget)-1;t=w[r]??w[w.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,l.A)("tabs-container",c.tabList)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},d)},b.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.A)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>w.push(e),onKeyDown:k,onFocus:E,onClick:E},o,{className:(0,l.A)("tabs__item",c.tabItem,o?.className,{"tabs__item--active":O===t})}),r??t)}))),t?(0,n.cloneElement)(h.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function m(e){const t=(0,o.A)();return n.createElement(p,(0,a.A)({key:String(t)},e))}},83148:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=r(58168),n=(r(96540),r(15680)),l=r(4865),o=r(19365);const s={title:"All Paths From Source to Target"},i=void 0,u={unversionedId:"graph/all-paths-from-source-to-target",id:"graph/all-paths-from-source-to-target",title:"All Paths From Source to Target",description:"\u63cf\u8ff0",source:"@site/docs/graph/all-paths-from-source-to-target.md",sourceDirName:"graph",slug:"/graph/all-paths-from-source-to-target",permalink:"/graph/all-paths-from-source-to-target",draft:!1,tags:[],version:"current",frontMatter:{title:"All Paths From Source to Target"},sidebar:"docs",previous:{title:"Path with Maximum Probability",permalink:"/graph/path-with-maximum-probability"},next:{title:"\u5e76\u67e5\u96c6",permalink:"/graph/ufs/"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],m={toc:p},d="wrapper";function h(e){let{components:t,...r}=e;return(0,n.yg)(d,(0,a.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,n.yg)("p",null,"TODO"),(0,n.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,n.yg)("p",null,"TODO"),(0,n.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,n.yg)(l.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,n.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,n.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"// All Paths From Source to Target\n// Time complexity: O(2^N * N)\n// Space complexity: O(N)\nclass Solution {\n public:\n  vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n    vector<int> path;\n    path.push_back(0);\n    dfs(graph, 0, graph.size() - 1, path);\n    return result;\n  }\n\n  void dfs(const vector<vector<int>>& graph, int start, const int end, vector<int>& path) {\n    if (start == end) {\n      result.push_back(path);\n      return;\n    }\n\n    for (int node : graph[start]) {\n      path.push_back(node);\n      dfs(graph, node, end, path);\n      path.pop_back();\n    }\n  }\n\n private:\n  vector<vector<int>> result;\n};\n")))))}h.isMDXComponent=!0}}]);