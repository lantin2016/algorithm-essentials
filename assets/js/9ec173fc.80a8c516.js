"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8146],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>y});var a=t(96540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),u=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=u(e.components);return a.createElement(s.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},b=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),b=n,y=p["".concat(s,".").concat(b)]||p[b]||d[b]||l;return t?a.createElement(y,o(o({ref:r},c),{},{components:t})):a.createElement(y,o({ref:r},c))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var l=t.length,o=new Array(l);o[0]=b;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},19365:(e,r,t)=>{t.d(r,{A:()=>o});var a=t(96540),n=t(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:r,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,o),hidden:t},r)}},4865:(e,r,t)=>{t.d(r,{A:()=>d});var a=t(58168),n=t(96540),l=t(20053),o=t(92303),i=t(31682),s=t(86976),u=t(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:r,block:t,defaultValue:o,values:p,groupId:d,className:b}=e,y=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),m=p??y.map((e=>{let{props:{value:r,label:t,attributes:a}}=e;return{value:r,label:t,attributes:a}})),v=(0,i.X)(m,((e,r)=>e.value===r.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??y.find((e=>e.props.default))?.props.value??y[0].props.value;if(null!==f&&!m.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${m.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:g}=(0,s.x)(),[T,w]=(0,n.useState)(f),O=[],{blockElementScrollPositionUntilNextRender:N}=(0,u.a_)();if(null!=d){const e=h[d];null!=e&&e!==T&&m.some((r=>r.value===e))&&w(e)}const S=e=>{const r=e.currentTarget,t=O.indexOf(r),a=m[t].value;a!==T&&(N(r),w(a),null!=d&&g(d,String(a)))},E=e=>{let r=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;r=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;r=O[t]??O[O.length-1];break}}r?.focus()};return n.createElement("div",{className:(0,l.A)("tabs-container",c.tabList)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},b)},m.map((e=>{let{value:r,label:t,attributes:o}=e;return n.createElement("li",(0,a.A)({role:"tab",tabIndex:T===r?0:-1,"aria-selected":T===r,key:r,ref:e=>O.push(e),onKeyDown:E,onFocus:S,onClick:S},o,{className:(0,l.A)("tabs__item",c.tabItem,o?.className,{"tabs__item--active":T===r})}),t??r)}))),r?(0,n.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},y.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==T})))))}function d(e){const r=(0,o.A)();return n.createElement(p,(0,a.A)({key:String(r)},e))}},74105:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var a=t(58168),n=(t(96540),t(15680)),l=t(4865),o=t(19365);const i={title:"Validate Binary Search Tree"},s=void 0,u={unversionedId:"binary-tree/bst/validate-binary-search-tree",id:"binary-tree/bst/validate-binary-search-tree",title:"Validate Binary Search Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/bst/validate-binary-search-tree.md",sourceDirName:"binary-tree/bst",slug:"/binary-tree/bst/validate-binary-search-tree",permalink:"/binary-tree/bst/validate-binary-search-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Validate Binary Search Tree"},sidebar:"docs",previous:{title:"Unique Binary Search Trees II",permalink:"/binary-tree/bst/unique-binary-search-trees-ii"},next:{title:"Convert Sorted Array to Binary Search Tree",permalink:"/binary-tree/bst/convert-sorted-array-to-binary-search-tree"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],d={toc:p},b="wrapper";function y(e){let{components:r,...t}=e;return(0,n.yg)(b,(0,a.A)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,n.yg)("p",null,"Given a binary tree, determine if it is a valid binary search tree (BST)."),(0,n.yg)("p",null,"Assume a BST is defined as follows:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"The left subtree of a node contains only nodes with keys less than the node's key."),(0,n.yg)("li",{parentName:"ul"},"The right subtree of a node contains only nodes with keys greater than the node's key."),(0,n.yg)("li",{parentName:"ul"},"Both the left and right subtrees must also be binary search trees.")),(0,n.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,n.yg)("p",null,"\u65e0"),(0,n.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,n.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,n.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},"// Validate Binary Search Tree\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(\\logn)\npublic class Solution {\n    public boolean isValidBST(TreeNode root) {\n        return isValidBST(root, INT_MIN, INT_MAX);\n    }\n\n    bool isValidBST(TreeNode* root, int lower, int upper) {\n        if (root == nullptr) return true;\n\n        return root.val > lower && root.val < upper\n                && isValidBST(root.left, lower, root.val)\n                && isValidBST(root.right, root.val, upper);\n    }\n}\n"))),(0,n.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"// Validate Binary Search Tree\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(\\logn)\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValidBST(root, LONG_MIN, LONG_MAX);\n    }\n\n    bool isValidBST(TreeNode* root, long long lower, long long upper) {\n        if (root == nullptr) return true;\n\n        return root->val > lower && root->val < upper\n                && isValidBST(root->left, lower, root->val)\n                && isValidBST(root->right, root->val, upper);\n    }\n};\n")))),(0,n.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/binary-tree/bst/validate-binary-search-tree"},"Validate Binary Search Tree"))))}y.isMDXComponent=!0}}]);