"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[7654],{15680:(e,r,n)=>{n.d(r,{xA:()=>m,yg:()=>f});var t=n(96540);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},m=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=o,f=p["".concat(c,".").concat(u)]||p[u]||y[u]||a;return n?t.createElement(f,i(i({ref:r},m),{},{components:n})):t.createElement(f,i({ref:r},m))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},17916:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var t=n(58168),o=(n(96540),n(15680));const a={title:"Lowest Common Ancestor of a Binary Tree II"},i=void 0,l={unversionedId:"binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii",id:"binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii",title:"Lowest Common Ancestor of a Binary Tree II",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii.md",sourceDirName:"binary-tree/recursion",slug:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii",permalink:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii",draft:!1,tags:[],version:"current",frontMatter:{title:"Lowest Common Ancestor of a Binary Tree II"},sidebar:"docs",previous:{title:"Lowest Common Ancestor of a Binary Tree",permalink:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree"},next:{title:"Lowest Common Ancestor of a Binary Tree III",permalink:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-iii"}},c={},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:s},p="wrapper";function y(e){let{components:r,...n}=e;return(0,o.yg)(p,(0,t.A)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,o.yg)("p",null,"TODO"),(0,o.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,o.yg)("p",null,"\u8fd9\u9898\u4e0e",(0,o.yg)("a",{parentName:"p",href:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree"),"\u7684\u533a\u522b\u662f\uff0c",(0,o.yg)("inlineCode",{parentName:"p"},"p"),"\u548c",(0,o.yg)("inlineCode",{parentName:"p"},"q"),"\u53ef\u80fd\u4e0d\u5b58\u5728\u4e8e\u6811\u4e2d\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u8fd4\u56de",(0,o.yg)("inlineCode",{parentName:"p"},"null"),"\u3002"),(0,o.yg)("p",null,"\u8fd9\u9898\u7684\u4ee3\u7801\u4e0e",(0,o.yg)("a",{parentName:"p",href:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree"),"\u7edd\u5927\u90e8\u5206\u96f7\u540c\uff0c\u67092\u70b9\u53d8\u5316\uff1a"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"DFS\u7684\u65f6\u5019\uff0c\u5982\u679c\u9047\u5230",(0,o.yg)("inlineCode",{parentName:"li"},"root"),"\u7b49\u4e8e",(0,o.yg)("inlineCode",{parentName:"li"},"p"),"\u6216",(0,o.yg)("inlineCode",{parentName:"li"},"q"),"\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u7acb\u523b\u8fd4\u56deroot\uff0c\u56e0\u4e3a\u4e0d\u80fd\u5224\u65ad\u53e6\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u5728\u6811\u4e2d\uff0c\u6240\u4ee5\u9700\u8981\u91c7\u53d6",(0,o.yg)("strong",{parentName:"li"},"\u540e\u5e8f\u904d\u5386"),"\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u8bbf\u95ee\u5230"),(0,o.yg)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e00\u4e2a\u8ba1\u6570\u5668",(0,o.yg)("inlineCode",{parentName:"li"},"count"),"\uff0c\u5f53\u641c\u7d22\u5230",(0,o.yg)("inlineCode",{parentName:"li"},"p"),"\u6216",(0,o.yg)("inlineCode",{parentName:"li"},"q"),"\u7684\u65f6\u5019\uff0c\u8ba1\u6570\u5668",(0,o.yg)("inlineCode",{parentName:"li"},"count"),"\u589e\u4e00\uff0c\u6700\u540e\u5982\u679c",(0,o.yg)("inlineCode",{parentName:"li"},"count"),"\u7b49\u4e8e2\uff0c\u8bf4\u660e",(0,o.yg)("inlineCode",{parentName:"li"},"p"),"\u6216",(0,o.yg)("inlineCode",{parentName:"li"},"q"),"\u5728\u540c\u4e00\u68f5\u6811\u4e2d\uff0c\u8fd4\u56de\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u5426\u5219\u8fd4\u56de",(0,o.yg)("inlineCode",{parentName:"li"},"null"),"\u3002")),(0,o.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},"// Lowest Common Ancestor of a Binary Tree II\n// Time complexity: O(n)\n// Space complexity: O(logn)\nclass Solution {\n    private int count = 0;\n\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        TreeNode LCA = LCA(root, p, q);\n        return count == 2 ? LCA : null;\n    }\n\n    public TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null) return root;\n\n        TreeNode left = LCA(root.left, p, q);     \n        TreeNode right = LCA(root.right, p, q);\n        \n        if (root == p || root == q) {\n            count++;\n            return root;\n        }\n\n        return left == null ? right : right == null ? left : root;\n    }\n}\n")),(0,o.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-iii"},"Lowest Common Ancestor of a Binary Tree III")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/binary-tree/bst/lca-of-bst"},"LCA of BST"))))}y.isMDXComponent=!0}}]);