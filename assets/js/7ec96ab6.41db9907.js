"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[6888],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>v});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,v=p["".concat(u,".").concat(m)]||p[m]||d[m]||l;return r?n.createElement(v,o(o({ref:t},c),{},{components:r})):n.createElement(v,o({ref:t},c))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},19365:(e,t,r)=>{r.d(t,{A:()=>o});var n=r(96540),a=r(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,o),hidden:r},t)}},4865:(e,t,r)=>{r.d(t,{A:()=>d});var n=r(58168),a=r(96540),l=r(20053),o=r(92303),i=r(31682),u=r(86976),s=r(23104);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:r,defaultValue:o,values:p,groupId:d,className:m}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??v.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),h=(0,i.X)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??v.find((e=>e.props.default))?.props.value??v[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,u.x)(),[O,T]=(0,a.useState)(f),C=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.a_)();if(null!=d){const e=b[d];null!=e&&e!==O&&g.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,r=C.indexOf(t),n=g[r].value;n!==O&&(w(t),T(n),null!=d&&y(d,String(n)))},x=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=C.indexOf(e.currentTarget)+1;t=C[r]??C[0];break}case"ArrowLeft":{const r=C.indexOf(e.currentTarget)-1;t=C[r]??C[C.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,l.A)("tabs-container",c.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},m)},g.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>C.push(e),onKeyDown:x,onFocus:E,onClick:E},o,{className:(0,l.A)("tabs__item",c.tabItem,o?.className,{"tabs__item--active":O===t})}),r??t)}))),t?(0,a.cloneElement)(v.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function d(e){const t=(0,o.A)();return a.createElement(p,(0,n.A)({key:String(t)},e))}},85937:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(58168),a=(r(96540),r(15680)),l=r(4865),o=r(19365);const i={title:"Course Schedule"},u=void 0,s={unversionedId:"graph/topological-sort/course-schedule",id:"graph/topological-sort/course-schedule",title:"Course Schedule",description:"\u63cf\u8ff0",source:"@site/docs/graph/topological-sort/course-schedule.md",sourceDirName:"graph/topological-sort",slug:"/graph/topological-sort/course-schedule",permalink:"/graph/topological-sort/course-schedule",draft:!1,tags:[],version:"current",frontMatter:{title:"Course Schedule"},sidebar:"docs",previous:{title:"\u62d3\u6251\u6392\u5e8f",permalink:"/graph/topological-sort/"},next:{title:"Course Schedule II",permalink:"/graph/topological-sort/course-schedule-ii"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"BFS",id:"bfs",level:4},{value:"DFS",id:"dfs",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],d={toc:p},m="wrapper";function v(e){let{components:t,...r}=e;return(0,a.yg)(m,(0,n.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.yg)("p",null,"TODO"),(0,a.yg)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.yg)("p",null,"TODO"),(0,a.yg)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.yg)("h4",{id:"bfs"},"BFS"),(0,a.yg)(l.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,a.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Course Schedule\n// Time complexity: O(E+V)\n// Space complexity: O(E+V)\nclass Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int>> graph(numCourses, vector<int>()); // adjacent list\n        vector<int> in(numCourses); // in degree\n        for (auto p : prerequisites) {\n            graph[p[1]].push_back(p[0]);\n            ++in[p[0]];\n        }\n        queue<int> q;\n        for (int i = 0; i < numCourses; ++i) {\n            if (in[i] == 0) q.push(i);\n        }\n        while (!q.empty()) {\n            int t = q.front(); q.pop();\n            for (auto neighbor : graph[t]) {\n                --in[neighbor];\n                if (in[neighbor] == 0) q.push(neighbor);\n            }\n        }\n        for (int i = 0; i < numCourses; ++i) {\n            if (in[i] != 0) return false;\n        }\n        return true;\n    }\n};\n")))),(0,a.yg)("h3",{id:"dfs"},"DFS"),(0,a.yg)(l.A,{defaultValue:"cpp",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"// TODO\n"))),(0,a.yg)(o.A,{value:"cpp",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// Course Schedule\n// Time complexity: O(E+V)\n// Space complexity: O(E+V)\nclass Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int>> graph(numCourses, vector<int>()); // // adjacent list\n        vector<int> visited(numCourses); // 0, not visited; 1, visited; -1, cyclic\n        for (auto p : prerequisites) {\n            graph[p[1]].push_back(p[0]);\n        }\n        for (int i = 0; i < numCourses; ++i) {\n            if (!canFinishDFS(graph, visited, i)) return false;\n        }\n        return true;\n    }\n    bool canFinishDFS(vector<vector<int>>& graph, vector<int>& visited, int i) {\n        if (visited[i] == -1) return false;\n        if (visited[i] == 1) return true;\n        visited[i] = -1;\n        for (auto neighbor : graph[i]) {\n            if (!canFinishDFS(graph, visited, neighbor)) return false;\n        }\n        visited[i] = 1;\n        return true;\n    }\n};\n")))),(0,a.yg)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/graph/topological-sort/course-schedule"},"Course Schedule"))))}v.isMDXComponent=!0}}]);